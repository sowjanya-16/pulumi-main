@model LC_Reports_V1.Controllers.Del_list


@{
    ViewBag.Title = "GetDeliveryStatus";
    Layout = "~/Views/Shared/_Layout_SLCockpit.cshtml";
    // var delData = (IEnumerable<LC_Reports_V1.Controllers.DeliveryStatus>)TempData["DeliveryStatus"];
}

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-GKX0NP1SYR"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());

    gtag('config', 'G-GKX0NP1SYR');
</script>
<script type="text/javascript">
    $(document).ready(function () {

        var obj = @Html.Raw(Json.Encode(Model));
        var Sdate = '@TempData["Del_StartDate"]';
        var Edate = '@TempData["Del_EndDate"]';
        //var employeeData = (IEnumerable<DeliveryStatus>)TempData["DeliveryStatus"];
        var delTitle = 'Actual delivery Vs Requested' +  '( StartDate: ' + Sdate + ' - EndDate: ' + Edate + ' )';

        DeliveryStatus_Chart(obj.del_status);
        debugger;
        function DeliveryStatus_Chart(data) {
            debugger;


            $("#DeliveryStatus").dxChart({

                rotated: true,
                //width: 500,
                dataSource: data,

                series: {
                    label: {
                        visible: true,
                        backgroundColor: '#ffff', //'#c18e92',
                        font: {
                            color: "black",
                            family: "Arial",
                            size: 13

                        },

                    },
                    color: '#79cac4',
                    type: 'bar',
                    argumentField: 'Description',
                    valueField: 'Value',
                },
                title: {
                    text: delTitle,
                    font: {
                        color: "black",
                        family: "Arial",
                        size: 20

                    },
                },

                argumentAxis: {
                    label: {
                        //customizeText() {
                        //    return `Day ${this.valueText}`;
                        //},
                        visible: true,
                        font: {
                            color: "black",
                            family: "Arial",
                            size: 13

                        },
                    },
                },
                valueAxis: {
                    //tick: {
                    //    visible: false,
                    //},

                    label: {
                        visible: true,
                        font: {
                            color: "black",
                            family: "Arial",
                            size: 13

                        },

                    },

                    title: {
                        text: "Number of POs Delivered",
                        font: {
                            color: "black",
                            family: "Arial",
                            size: 13

                        },
                    }

                },
                //export: {
                //    enabled: true,
                //},
                legend: {
                    visible: false,
                },
            });
        }


    });


</script>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="~/Content/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" />
</head>
<body>

    <div id="DeliveryStatus" style=" width:90vw;height:70vh; margin:auto;"></div>

</body>
</html>