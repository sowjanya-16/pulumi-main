@model LC_Reports_V1.Controllers.Del_list

@{
    ViewBag.Title = "HWDamageOEM";
    Layout = "~/Views/Shared/_Layout_SLCockpit.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {

        var obj = @Html.Raw(Json.Encode(Model));
          var oemdate = '@TempData["oem_EndDate"]';
        //var employeeData = (IEnumerable<DeliveryStatus>)TempData["DeliveryStatus"];
        //var delData =
        var title_oem = 'Hardware Damage Cost per OEM ( Till ' + oemdate + ' )';
        HWDamageOEM_Chart(obj.hwoem);
        debugger;
        //function HWDamageOEM_Chart(data) {
        //    debugger;

        //    $("#hwDamage_oemchart").dxChart({

        //        dataSource: data,
        //        resolveLabelOverlapping: 'stack',
        //        color: '#57b8bc',
        //        //scrollBar: {
        //        //    visible: true
        //        //},
        //        //customizePoint() {
        //        //    debugger;
        //        //    if (this.seriesName == EndMonth)
        //        //        return { color: '#db9a9a', hoverStyle: { color: '#f5a2a2' } };
        //        //    //if (this.value > 1000) {
        //        //    //    return { color: '#ff7c7c', hoverStyle: { color: '#ff7c7c' } };
        //        //    //}
        //        //    //if (this.value < 500) {
        //        //    //    return { color: '#8c8cff', hoverStyle: { color: '#8c8cff' } };
        //        //    //}
        //        //    return null;
        //        //},
        //        argumentAxis: {
        //            label: {
        //                wordWrap: 'none',
        //                overlappingBehavior: 'rotate',
        //            },
        //        },

        //        //zoomAndPan: {
        //        //    argumentAxis: "both",

        //        //},
        //        ////height: 50,
        //       // size: {
        //       //     height: 400,//200,
        //       //     width: 1200,
        //       // },
        //        title: {
        //            text: title_oem,
        //            font: {
        //                color: "black",
        //                family: "Arial",
        //                size: 20

        //            },
        //        },

        //        commonSeriesSettings: {
        //            argumentField: 'OEM',
        //            valueField: 'Damage_Cost',
        //            //color: '#57b8bc',
        //            label: {
        //                visible: true,
        //                customizeText: function () {
        //                    return "€" + this.value.toFixed(0);
        //                },
        //                //backgroundColor:'violet'




        //            },
        //            type: 'bar',
        //            barWidth: 70,

        //        },
        //        seriesTemplate: {
        //            nameField: 'Month',
        //            //color: '#57b8bc'

        //        },
        //        //color: '#57b8bc',
        //        palette: 'Violet',
        //        //'Dark Moon',
        //        //'Dark Violet',
        //        //'Soft Blue',
        //        //'Ocean',
        //        //onLegendClick: function (e) {
        //        //    debugger;
        //        //    var hiddenPoints, shownPoints;

        //        //        hiddenPoints = e.component.getSeriesByName("Jan").getAllPoints();
        //        //    shownPoints = e.target.getAllPoints();
        //        //    //lastClickedSeriesName = e.target.name;


        //        //    $.each(shownPoints, function (index, point) {

        //        //        point.showTooltip();//getLabel().show();
        //        //    });
        //        //}  ,
        //        onLegendClick: function (e) {
        //            debugger;
        //            var series_curr = e.target;

        //            //if (series.isVisible()) {
        //            //    series.hide();
        //            //} else {
        //            //    series.show();
        //            //}
        //            // series.opacity = 1;
        //            for (i = 0; i < 12; i++) {
        //                if (e.component.series[i].name != series_curr.name) {
        //                    e.component.series[i].hide();
        //                }
        //                else {
        //                    shownPoints = e.target.getAllPoints();
        //                    e.component.series[i].show();
        //                    $.each(shownPoints, function (index, point) {
        //                        debugger;
        //                        point.showTooltip();//getLabel().show();
        //                    });

        //                }


        //            }

        //        },
        //        legend: {
        //            font: {
        //                color: "black",
        //                family: "Arial",
        //                size: 13

        //            },
        //            customizeHint: function (e) {
        //                debugger;
        //                return "Click here for focus view - Hw Damage in " + e.seriesName ;
        //            }
        //        },
        //        //legend: {
        //        //    customizeHint: function (e) {
        //        //        debugger;
        //        //        e.seriesColor = '#ff7c7c';
        //        //    }

        //        //},
        //        //seriesHoverChanged: function (arg) {
        //        //    debugger;
        //        //    return {
        //        //    text: "Project Team: " + arg.argument + ", Month: " + arg.seriesName + " - " + "€*******" + arg.value.toFixed(0)
        //        //}
        //        //},
        //        //return {
        //        //    text: "Project Team: " + arg.argument + ", Month: " + arg.seriesName + " - " + "€" + arg.value.toFixed(0)
        //        //}




        //        //'Harmony Light',
        //        //'Soft Blue',
        //        //'Ocean',
        //        //commonSeriesSettings: {
        //        //    argumentField: "OEM",
        //        //    type: "bar",
        //        //    hoverMode: "allArgumentPoints",
        //        //    selectionMode: "allArgumentPoints",
        //        //    //barPadding: 5,
        //        //    barWidth: 50,
        //        //    valueField: "Damage_Cost", //name: "Damage_Cost",
        //        //    label: {

        //        //        visible: true,



        //        //    }


        //        //},


        //        //seriesTemplate: {
        //        //    nameField: 'Month',

        //        //},

        //        //series: [

        //        //    {
        //        //        valueField: "Damage_Cost", name: "Damage_Cost",
        //        //        label: {

        //        //            visible: true,



        //        //        }
        //        //    },


        //        //],





        //        valueAxis: [


        //            {

        //                position: 'left',
        //                label: {
        //                    font: {
        //                        color: "black",
        //                        family: "Arial",
        //                        size: 13

        //                    },
        //                },
        //                valueMarginsEnabled: false,
        //                title: {
        //                    text: "Cost (in €)",
        //                    font: {
        //                        color: "black",
        //                        family: "Arial",
        //                        size: 13

        //                    },
        //                },

        //                //constantLines: [{
        //                //    value: AverageVN_data,
        //                //    color: '#1b4f72',
        //                //    dashStyle: 'dash',
        //                //    width: 2,
        //                //    label: { visible: false },
        //                //    label: {
        //                //        text: 'VN Avg'
        //                //    },
        //                //}],
        //            },


        //        ],

        //        //title: 'Hardware Damage per Project Team',

        //        //export: {
        //        //    enabled: true,
        //        //    fileName: "Hardware Damage (Project Teamwise)"
        //        //},
        //        //tooltip: {
        //        //    enabled: true
        //        //}
        //        tooltip: {
        //            enabled: true,

        //            location: "edge",
        //            customizeTooltip: function (arg) {
        //                debugger;
        //                //if (arg.percentText != null)
        //                //    return { text: arg.point.data.Location + ":" + arg.valueText + "\n" + arg.point.series.name + ":" + arg.percentText }
        //                //else
        //                //    return { text: arg.point.data.Location + ":" + arg.valueText }
        //                return {
        //                    text: "Project Team: " + arg.argument + ", Month: " + arg.seriesName + " - " + "€" + arg.value.toFixed(0)
        //                }

        //            }
        //        },
        //    });
        //}
        debugger;
        function HWDamageOEM_Chart(data) {
            debugger;
            excelobjtsou = data;

           
            am4core.useTheme(am4themes_animated);
            am4core.options.queue = true;
            am4core.options.onlyShowOnViewport = true;
            var chart = am4core.create("hwDamage_oemchart", am4charts.XYChart);
            chart.hiddenState.properties.opacity = 0;

            chart.colors.step = 2;
            //chart.padding(30, 0, 0, 0);//(30, 30, 10, 30);
            //chart.paddingLeft = 0;
            //chart.paddingTop = 30;
            chart.legend = new am4charts.Legend();
            let markerTemplate = chart.legend.markers.template;
            markerTemplate.width = 10;
            markerTemplate.height = 10;
            var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
           
             // var mmmmm =  "name.replace(name.substring(0, name.indexOf('_') + 1), '')";
            categoryAxis.dataFields.category = "name";
            categoryAxis.renderer.grid.template.location = 0;
            categoryAxis.renderer.labels.template.verticalCenter = "middle";
            categoryAxis.renderer.labels.template.horizontalCenter = "left";
            categoryAxis.renderer.grid.template.above = true;
            categoryAxis.renderer.grid.template.disabled = true;
            categoryAxis.renderer.labels.template.rotation = 270;
            categoryAxis.renderer.labels.template.horizontalCenter = "right";
            categoryAxis.renderer.labels.template.verticalCenter = "middle";
            categoryAxis.renderer.minGridDistance = 5;

            var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
            chart.events.on("ready", function (ev) {
                valueAxis.min = 0;
                valueAxis.max = 8000;
            });
            valueAxis.strictMinMax = true;
            valueAxis.calculateTotals = true;
            valueAxis.renderer.minWidth = 30;
            valueAxis.title.text = "Cost (in €)";
            valueAxis.title.rotation = 270;
            valueAxis.title.align = "center";
            valueAxis.title.valign = "middle";
            valueAxis.title.dy = -40;
            valueAxis.title.fontWeight = 600;



            var tempOemdata = [];
            var labData = [];
            var chartData = [];
            debugger;
            

            function groupBy(objectArray, property) {
                return objectArray.reduce((groupedlist, eachobjinlist) => {
                    const key = eachobjinlist[property];
                    if (!groupedlist[key]) {
                        groupedlist[key] = [];
                    }
                    // Add object to list for given key's value
                    groupedlist[key].push(eachobjinlist);

                    return groupedlist;
                }, {});
            }
            const groupedbyOEM = groupBy(excelobjtsou, 'OEM');
            var cnt = 0;
            const keys = Object.keys(groupedbyOEM);
            debugger;
            for (let i = 0; i < keys.length; i++) {
                const key = keys[i];
                for (j = 0; j < groupedbyOEM[key].length; j++) {
                   
                    labData[cnt] =
                    {
                        labOEM: groupedbyOEM[key][j].OEM,
                        name: groupedbyOEM[key][j].MonthOEM,
                        name_m: groupedbyOEM[key][j].Month,
                        damage: groupedbyOEM[key][j].Damage_Cost,
                        reader: {
                            damage: (groupedbyOEM[key][j].Damage_Cost),
                            labOEM: groupedbyOEM[key][j].OEM,
                            name: groupedbyOEM[key][j].MonthOEM,
                            name_m: groupedbyOEM[key][j].Month,
                            
                        }
                    };
                    cnt++;
                }
            }

           
            //////debugger;
            var uniqueOEM = [];
            uniqueOEM = keys;

            //// process data ant prepare it for the chart
            uniqueOEM.forEach(function (l_oem) {
                //var providerData = data[providerName];
                //////debugger;
                // add data of one provider to temp array
                var tempArray = [];
                var count = 0;
                // add items
                labData.forEach(function (labItem) {

                    if (labItem.labOEM == l_oem) {
                        count++;
                        // we generate unique category for each column (providerName + "_" + itemName) and store realName
                        debugger;
                        tempArray.push({
                            name: labItem.name, 

                            reader: labItem.reader,
                            oem: l_oem,
                            damage: labItem.damage
                        })
                    }
                })
                // push to the final data
                //////debugger;
                am4core.array.each(tempArray, function (item) {
                    chartData.push(item);
                })

                // create range (the additional label at the bottom)
                //////debugger;
                var rangecat = categoryAxis.axisRanges.create();
                rangecat.category = tempArray[0].name;
                //rangecat.category = tempArray[0].name.replace(tempArray[0].name.substring(0, tempArray[0].name.indexOf('_') + 1), "");
                rangecat.endCategory = tempArray[tempArray.length - 1].name;
                    //.replace(tempArray[tempArray.length - 1].name.substring(0, tempArray[tempArray.length - 1].name.indexOf('_') + 1), "")
                   // tempArray[tempArray.length - 1].name;
                rangecat.label.text = tempArray[0].oem + " ";
                rangecat.label.dy = 0;
                rangecat.label.horizontalCenter = "middle";
                rangecat.label.rotation = 0;
                rangecat.label.paddingTop = 100;//160;//90;//180;
                rangecat.label.truncate = true;
                rangecat.label.fontWeight = "bold";
                rangecat.label.fontSize = 11;
                rangecat.grid.disabled = true;
                rangecat.tick.disabled = false;
                rangecat.tick.length = 85;//100;//85;///
                rangecat.tick.strokeOpacity = 0.6;
                rangecat.tick.location = 0;
               
            })
            chart.data = chartData;

            // last tick
            var rangelast = categoryAxis.axisRanges.create();
            rangelast.category = chart.data[chart.data.length - 1].name;
                //replace(chart.data[chart.data.length - 1].name.substring(0, chart.data[chart.data.length - 1].name.indexOf('_') + 1), "");

                //name;

                            rangelast.label.disabled = true;
            rangelast.grid.location = 1;
            rangelast.tick.disabled = false;
            rangelast.tick.length = 85;//100;//85;///
            rangelast.tick.location = 1;
            rangelast.tick.strokeOpacity = 0.6;
            debugger;
            ///END OF GROUPING CODE




            //////debugger;
            //Code to add the range mark
          


            var title = chart.titles.create();
            title.text = title_oem;
                //"HIL based " + Labtype_sel + " Loading";//"Location:" + " " + Locations_sel + " " + "; LabType:" + " " + Labtype_sel + " " + ";StartDate:" + " " + date1 + " " + " - " + " " + "EndDate: " + date2;
            title.fontSize = 20;
            title.family = "Arial";
            title.color = "black";

            ////debugger;
            //document.getElementById('chartdiv_title').innerHTML = "Location:" + " " + Locations_sel + " " + "; LabType:" + " " + Labtype_sel + " " + ";StartDate:" + " " + date1 + " " + " - " + " " + "EndDate: " + date2;

            var series1 = chart.series.push(new am4charts.ColumnSeries());
            series1.columns.template.width = am4core.percent(30);
            series1.columns.template.propertyFields.dummyData = "reader";
            series1.columns.template.tooltipText = "Project Team: {dummyData.labOEM} , \x0a Month: {dummyData.name_m}   -  €  {dummyData.damage}";

            //text: "Project Team: " + arg.argument + ", Month: " + arg.seriesName + " - " + "€" + arg.value.toFixed(0)


            //" Manual Hours: {valueY.totalPercent.formatNumber('#.00')}%}";
            series1.name = "Damage Cost  "; // + data.Damage_Cost;
            series1.dataFields.categoryX = "name";
           // "name.replace(name.substring(0, name.indexOf('_') + 1), '')";

            series1.dataFields.valueY = "damage";
            series1.dataItems.template.locations.categoryX = 0.5;
            series1.stacked = true;
            series1.tooltip.pointerOrientation = "vertical";
            series1.tooltip.exportable = true;

            var bullet1 = series1.bullets.push(new am4charts.LabelBullet());
            bullet1.interactionsEnabled = false;
            //bullet1.label.text = "Manual Usage: {valueY} %";
            //bullet1.label.fill = am4core.color("#ffffff");
            bullet1.locationY = 0.5;


           

            chart.scrollbarX = new am4core.Scrollbar();
            chart.scrollbarX.parent = chart.topAxesContainer;
            chart.scrollbarY = new am4core.Scrollbar();
            chart.scrollbarY.parent = chart.leftAxesContainer;
            chart.chartContainer.wheelable = false;
            var AvgInformation = chart.createChild(am4core.Label);
          //  AvgInformation.text = "          " + "Total No of Systems:" + " " + excelobjtsou.length; //+ "  | Average Manual Hours : " + averageManHours ;
            AvgInformation.fontSize = 14;
            AvgInformation.align = "center";
            chart.exporting.menu = new am4core.ExportMenu();
           // chart.exporting.filePrefix = "TSOU_" + Location + "_" + Labtype + "_" + date1 + "-" + date2;

        }




    });


</script>
<html>
<head>
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-GKX0NP1SYR"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'G-GKX0NP1SYR');
    </script>
    <script src="~/Scripts/core.js"></script>
    <script src="~/Scripts/charts.js"></script>
    <script src="~/Scripts/animated.js"></script>
    <link href="~/Content/Charts.css" rel="stylesheet" />
</head>
<body>
    <div id="hwDamage_oemchart" style="width:100%;height:80vh; margin:auto;"></div>

</body>
</html>

