@model LC_Reports_V1.Controllers.TC_List

@{
    ViewBag.Title = "GenerateTC";
    Layout = "~/Views/Shared/_Layout_SLCockpit.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {

        var obj = @Html.Raw(Json.Encode(Model));
        //var employeeData = (IEnumerable<DeliveryStatus>)TempData["DeliveryStatus"];
        //var delData =

        GenerateTCGrid(obj.tclist);
        debugger;
        function GenerateTCGrid(data) {
            debugger;
            $("#tc_grid").dxDataGrid({

                dataSource: data,
                keyExpr: "ID",
                columnResizingMode: "nextColumn",
                columnMinWidth: 100,
                //stateStoring: {
                //    enabled: true,
                //    type: "localStorage",
                //    storageKey: "RequestID"
                //},
                onContentReady: function (e) {
                    //debugger;
                    e.element.find('.dx-datagrid-headers').toggleClass('dx-state-disabled', e.component.hasEditData());
                },
                //noDataText: encodeMessage(noDataTextUnsafe),
                //showRequiredMark: true,
                //RequiredMark: '*',
                //columnResizingMode: "widget",
                //columnMinWidth: 100,
                onCellPrepared: function (e) {
                    e.cellElement.css('color', '#0000');


                    if (e.rowType === "header" || e.rowType === "filter") {
                        e.cellElement.css('font-weight', 'bold');
                        e.cellElement.css('font-style', 'Arial');
                        e.cellElement.css('font-size', 15);
                        //e.cellElement.addClass("columnHeaderCSS");
                        //e.cellElement.find("input").addClass("columnHeaderCSS");
                    }
                },
                noDataText: " ☺ No TravelCost data available for the selected year ! ",

                onToolbarPreparing: function (e) {
                    var dataGrid = e.component;

                    e.toolbarOptions.items[0].showText = 'always';


                },
                focusedRowEnabled: true,

                allowColumnReordering: true,
                allowColumnResizing: true,
                columnChooser: {
                    enabled: true
                },

                filterRow: {
                    visible: true

                },
                showBorders: true,
                headerFilter: {
                    visible: true,
                    applyFilter: "auto"
                },
                selection: {
                    applyFilter: "auto"
                },
                loadPanel: {
                    enabled: true
                },
                paging: {
                    pageSize: 100
                },
                searchPanel: {
                    visible: true,
                    width: 240,
                    placeholder: "Search..."
                },
                width: 1200,
                height:250,

                onEditorPreparing: function (e) {
                    var component = e.component,
                        rowIndex = e.row && e.row.rowIndex;//new elements are positioned on the rowindex

                },

                columns: [
                    {

                        alignment: "center",
                        columns: [

                            {
                                dataField: "Cmmt_Item",
                                //caption: "Dept",
                                width: 130,
                                validationRules: [{ type: "required" }],

                            },
                            {
                                dataField: "Year",
                                width: 100,
                                //caption: "Dept",
                                validationRules: [{ type: "required" }],

                            },


                            {
                                dataField: 'Budget_Plan',
                                caption: 'Budget Plan',
                                width: 190,
                                format: {
                                    type: "currency",
                                    precision: 0
                                },
                            },
                            {
                                dataField: 'Invoice',
                                caption: 'Invoice',
                                width: 160,
                                format: {
                                    type: "currency",
                                    precision: 0
                                },
                            },
                           
                            {
                                dataField: "Bud-Inv",
                                caption: 'Plan-Invoice',
                                width: 200,
                                format: {
                                    type: "currency",
                                    precision: 0
                                },
                                calculateCellValue: function (rowData) {
                                    //update the bud-inv
                                    var remain_budget;
                                    if (rowData.Budget_Plan == undefined || rowData.Budget_Plan == null || rowData.Budget_Plan == 0) {

                                        remain_budget = 0;
                                    }
                                    else if (rowData.Invoice == undefined || rowData.Invoice == null || rowData.Invoice == 0) {

                                        remain_budget = rowData.Budget_Plan;
                                    }
                                    else {

                                        remain_budget = rowData.Budget_Plan - rowData.Invoice;

                                    }

                                    return remain_budget;
                                }

                            }, {
                                dataField: 'Open',
                                caption: 'Open',
                                width: 160,
                                format: {
                                    type: "currency",
                                    precision: 0
                                },
                            },
                            
                            {
                                dataField: "Available",
                                caption: "Available",
                                width: 160,
                                format: {
                                    type: "currency",
                                    precision: 0
                                },
                                calculateCellValue: function (rowData) {
                                    //update the bud-inv
                                    var remain_budget;
                                    if (rowData.Budget_Plan == undefined || rowData.Budget_Plan == null || rowData.Budget_Plan == 0) {

                                        remain_budget = 0;
                                    }
                                    else if (rowData.Invoice != null && rowData.Invoice != undefined && rowData.Open != null && rowData.Open != undefined) {

                                        remain_budget = rowData.Budget_Plan - (rowData.Invoice + rowData.Open);
                                    }
                                    else if (rowData.Invoice == null && rowData.Invoice == undefined) {

                                        remain_budget = rowData.Budget_Plan - rowData.Open;

                                    }
                                    else
                                        remain_budget = rowData.Budget_Plan - rowData.Invoice;

                                    return remain_budget;
                                }

                            },

                        ]
                    }],


            });
           
        }
    });


</script>
<html>
<head>
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-GKX0NP1SYR"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'G-GKX0NP1SYR');
    </script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="~/Content/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" />
</head>
<body>
    <div id="tc_grid_title" style="margin-left: 600px; font-size:20px; font-family:Arial; "><b>TravelCost Summary </b></div>
    <div id="tc_grid" style="height: 700px; margin-left: 150px;"></div>
</body>
</html>
