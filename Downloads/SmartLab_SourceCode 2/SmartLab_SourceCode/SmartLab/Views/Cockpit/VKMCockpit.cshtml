
@{
    ViewBag.Title = "VKM Cockpit";
    Layout = "~/Views/Shared/_LayoutPageBudgeting.cshtml";
}
<style>
    /*to color specific column of dxdatagrid*/
    .ColumnsAutomatic {
        background-color: #e9ecf3;
        text-align: center;
    }
   
    li {
        height: 30px;
        padding: 0;
        font-size: 17px;
        
    }

    /*tab element coloring*/
    .nav-tabs > li > text.tabelement_color_default {
        color: white;
        border: none;
        padding-top: 4px;
    }

   
        /*tab element coloring - on hover */
        .tabelement_color_default:hover {
            color: deepskyblue;
           
        }
    .nav-tabs > li > text.tabelement_color_default.active {
        background-color: #cceeff;
        border: none;
        color: black;
        padding-top: 4px;
    }

    .dx-row.dx-data-row.dx-column-lines.dx-state-hover td {
        background: #e3f2fd !important;
    }




    .dx-header-row > td[role="columnheader"] > div.dx-datagrid-text-content {
        font-size: 17px;
        font-weight: bold;
    }

    .dx-datagrid-headers .dx-header-row {
        background-color: #50237F;/*purple*/
        /*#005691;*/
        /*#6626A5;*/ 
    }

    .dx-header-row {
        color: navajowhite;
    }

    .dataContainer_fortabContent {
        /*border: 2px solid red;*/
        /* border-top: 2px solid white;
        border-radius: 12px;*/
        background-color: #cceeff; /*light blue*/
        padding: 1px;
        height: 602px;
    }


    li {
        cursor: pointer;
    }

</style>


<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-GKX0NP1SYR"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'G-GKX0NP1SYR');
    </script>
    <title>VKM Cockpit</title>
    @section scripts{


        @*CSS Library*@

        <link href="~/Content/bootstrap-select.css" rel="stylesheet" />
        <link href="~/Content/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" />

        @*JS Library specific for Bootstrap-Select Dropdown*@

        <script src="~/Scripts/bootstrap-select.js"></script>


        <script type="text/javascript">
            var dataObjData;
            var dataObj;

            var selected = [];
            var selected1;
            var selected2;
            //var chartData = [];
            //var MAE = [];
            //var NMAE = [];
            //var SW = [];
            //var Totals = [];
            //var year = [];
            //var Plannedvkm;
            //var Utilizedvkm;
            //var Percentagevkm;
            //var params;
            var BU_list, Item_list, Category_list, OEM_list, Group_list, Group_list_2020, CostElement_list;
            var dataGridCockpit;
            var costelement_selected;
            var categoryid_selected;
            var ItemID;
            var BUList;
            var selected, selectedthree;
            var selectedthree1, selectedthree2, selectedthree3;
            var selected_ccxc;
            var isthreeyr_flag;
            var current_tab; //store curent tab(if 3 yr tab open -> View changed -> both 2yr & 3 yr tab data ll be updated but success notifiction should be shown only for active tab's content updtion)

            window.onload = function () {
                $.notify('Comparison Table and Chart will be rendered here. Please wait !!', {
                    globalPosition: "top center",
                    className: "info",
                    autoHideDelay: 20000,
                });
            }
            $(document).ready(function () {

                $.ajax({

                    type: "GET",
                    url: "/Cockpit/Lookup",
                    success: onsuccess_lookupdata,
                    error: onerror_lookupdata
                });


                function onsuccess_lookupdata(response) {

                    lookup_data = response.data;
                    BU_list = lookup_data.BU_List;
                    OEM_list = lookup_data.OEM_List;
                    DEPT_list = lookup_data.DEPT_List;
                    Group_list = lookup_data.Groups_test;
                    Item_list = lookup_data.Item_List;
                    Category_list = lookup_data.Category_List;
                    CostElement_list = lookup_data.CostElement_List;
                }

                function onerror_lookupdata(response) {
                    alert("Error in fetching lookup");

                }


                var ddlYears1 = document.getElementById("ddlYears1");
                var ddlYears2 = document.getElementById("ddlYears2");
                var currentYear = (new Date()).getFullYear();
                for (var i = 2021; i <= currentYear; i++) {
                    var option = document.createElement("OPTION");
                    option.innerHTML = i;
                    option.value = i;
                    ddlYears1.appendChild(option);
                    // if (option.value == currentYear || option.value == (currentYear + 1) || option.value == (currentYear - 2)) {
                    if (option.value == currentYear) {
                        option.defaultSelected = true;
                    }
                    selected1 = $("#ddlYears1").val();
                    //}
                }

                for (var i = 2022; i <= currentYear + 1; i++) {
                    var option = document.createElement("OPTION");
                    option.innerHTML = i;
                    option.value = i;
                    ddlYears2.appendChild(option);
                    //if (option.value == currentYear || option.value == (currentYear + 1) || option.value == (currentYear - 2)) {
                    if (option.value == currentYear + 1) {
                        option.defaultSelected = true;
                    }
                    selected2 = $("#ddlYears2").val();
                    //}
                }

                //three yr view
                var ddlYearsthree_1 = document.getElementById("ddlYearsthree_1");
                var ddlYearsthree_2 = document.getElementById("ddlYearsthree_2");
                var ddlYearsthree_3 = document.getElementById("ddlYearsthree_3");
                var currentYear = (new Date()).getFullYear();
                debugger;
                for (var i = 2020; i <= currentYear + 1; i++) {
                    var option = document.createElement("OPTION");
                    option.innerHTML = i;
                    option.value = i;
                    ddlYearsthree_1.appendChild(option);
                }
                for (var i = 2020; i <= currentYear + 1; i++) {
                    var option = document.createElement("OPTION");
                    option.innerHTML = i;
                    option.value = i;
                    ddlYearsthree_2.appendChild(option);
                }
                for (var i = 2020; i <= currentYear + 1; i++) {
                    var option = document.createElement("OPTION");
                    option.innerHTML = i;
                    option.value = i;
                    ddlYearsthree_3.appendChild(option);
                }
                selected.push(selected1);
                selected.push(selected2);
                selected_ccxc = $("#ddlCC_XC").val();


                $(".selectpicker").selectpicker('refresh');

                get_bus();
                $('#gen').click();



            });
            function checkyr_validity(yrs) {

                var checkduplicateyr = yrs.length === new Set(yrs).size; //arr.some((val, i) => arr.indexOf(val) !== i) --some() method checks if any of elements in array pass a test
                if (!checkduplicateyr)
                    $.notify('Same year has been selected multiple times, Please check!', {
                        globalPosition: "top center",
                        className: "error"
                    });

                debugger;
                return checkduplicateyr;
            }
            function fnYear1Change(yrselect) {
                debugger;


                selected = [];
                selected1 = $("#ddlYears1").val();
                if (parseInt($("#ddlYears1").val()) > parseInt(selected2)) {
                    $.notify('Please select a year lesser than the other!!', {
                        globalPosition: "top center",
                        className: "info",
                        autoHideDelay: 20000
                    });
                }
                else {
                    selected.push(selected1);
                    selected.push(selected2);
                    var checkyr = checkyr_validity(selected);
                    if (checkyr) {
                        notify();
                        $("#VKMSummaryTable").prop('hidden', true);
                        $("#chart").prop('hidden', true);
                        $("#CostElementDrillDown_Title").prop('hidden', true);
                        $("#CostElementDrillDown").prop('hidden', true);
                        $("#CategoryDrillDown_Title").prop('hidden', true);
                        $("#CategoryDrillDown").prop('hidden', true);
                        $("#Itemview_Title").prop('hidden', true);
                        $("#RequestTable_Cockpit").prop('hidden', true);

                        $("#gen").prop('disabled', false);
                        $('#gen').click();
                    }
                }

            }
            function fnYear2Change(yrselect) {
                debugger;


                selected = [];
                selected2 = $("#ddlYears2").val();
                if (parseInt($("#ddlYears2").val()) < parseInt(selected1)) {
                    $.notify('Please select a year greater than the other!!', {
                        globalPosition: "top center",
                        className: "info",
                        autoHideDelay: 20000
                    });
                }
                else {

                    selected.push(selected1);
                    selected.push(selected2);
                    var checkyr = checkyr_validity(selected);
                    if (checkyr) {
                        notify();
                        $("#VKMSummaryTable").prop('hidden', true);
                        $("#chart").prop('hidden', true);
                        $("#CostElementDrillDown_Title").prop('hidden', true);
                        $("#CostElementDrillDown").prop('hidden', true);
                        $("#CategoryDrillDown_Title").prop('hidden', true);
                        $("#CategoryDrillDown").prop('hidden', true);
                        $("#Itemview_Title").prop('hidden', true);
                        $("#RequestTable_Cockpit").prop('hidden', true);

                        $("#gen").prop('disabled', false);
                        $('#gen').click();
                    }

                }
            }

            function fnYearthree1Change(yrselect) {
                debugger;
                selectedthree = [];
                selectedthree1 = $("#ddlYearsthree_1").val();
                selectedthree.push(selectedthree1);
                if (selectedthree2 != undefined)
                    selectedthree.push(selectedthree2);
                if (selectedthree3 != undefined)
                    selectedthree.push(selectedthree3);

                if (selectedthree.length == 3) {
                    var checkyr = checkyr_validity(selectedthree);
                    if (checkyr) {

                        $.notify('Comparison Chart will be rendered here. Please wait !!', {
                            globalPosition: "top center",
                            className: "info",
                            autoHideDelay: 20000
                        });
                        isthreeyr_flag = true;
                        $.ajax({
                            type: "POST",
                            url: "/Cockpit/VKMSummaryData/",
                            data: { 'years': selectedthree, 'chart': true, 'buList': BUList, 'selected_ccxc': selected_ccxc },
                            success: OnSuccess_ChartSummaryData,
                            error: OnError_ChartSummaryData
                        });
                    }
                }


            }
            function fnYearthree2Change(yrselect) {
                debugger;
                selectedthree = [];
                selectedthree2 = $("#ddlYearsthree_2").val();
                if (selectedthree1 != undefined)
                    selectedthree.push(selectedthree1);
                selectedthree.push(selectedthree2);
                if (selectedthree3 != undefined)
                    selectedthree.push(selectedthree3);;

                if (selectedthree.length == 3) {
                    var checkyr = checkyr_validity(selectedthree);
                    if (checkyr) {

                        $.notify('Comparison Chart will be rendered here. Please wait !!', {
                            globalPosition: "top center",
                            className: "info",
                            autoHideDelay: 20000
                        });
                        isthreeyr_flag = true;
                        $.ajax({
                            type: "POST",
                            url: "/Cockpit/VKMSummaryData/",
                            data: { 'years': selectedthree, 'chart': true, 'buList': BUList, 'selected_ccxc': selected_ccxc },
                            success: OnSuccess_ChartSummaryData,
                            error: OnError_ChartSummaryData
                        });
                    }
                }

            }
            function fnYearthree3Change(yrselect) {
                debugger;
                selectedthree = [];
                selectedthree3 = $("#ddlYearsthree_3").val();
                if (selectedthree1 != undefined)
                    selectedthree.push(selectedthree1);
                if (selectedthree2 != undefined)
                    selectedthree.push(selectedthree2);
                selectedthree.push(selectedthree3);

                if (selectedthree.length == 3) {
                    var checkyr = checkyr_validity(selectedthree);
                    if (checkyr) {

                        $.notify('Comparison Chart will be rendered here. Please wait !!', {
                            globalPosition: "top center",
                            className: "info",
                            autoHideDelay: 20000
                        });

                        isthreeyr_flag = true;

                        $.ajax({
                            type: "POST",
                            url: "/Cockpit/VKMSummaryData/",
                            data: { 'years': selectedthree, 'chart': true, 'buList': BUList, 'selected_ccxc': selected_ccxc },
                            success: OnSuccess_ChartSummaryData,
                            error: OnError_ChartSummaryData
                        });
                    }
                }

            }
            $(function () {
                var create = document.querySelector('.create');
                var genText = document.querySelector("#genText");
                var genSpinner = document.querySelector("#genSpinner");
                create.addEventListener("click", function () {

                    var str = "Please Wait, Comparing...  ";
                    var result = str.bold();
                    genText.innerHTML = result;

                    genSpinner.classList.add('fa');
                    genSpinner.classList.add('fa-spinner');
                    genSpinner.classList.add('fa-pulse');

                });

            });

            $("#gen").click(function () {


                vkmsummary_table();
                vkmsummary_chart();
                debugger;




            })




            function vkmsummary_table() {
                debugger;
                $.ajax({
                    type: "POST",
                    url: "/Cockpit/VKMSummaryData/",
                    data: { 'years': selected, 'buList': BUList, 'selected_ccxc': selected_ccxc },
                    //async: false,
                    success: OnSuccess_VKMSummaryData,
                    error: OnError_VKMSummaryData
                });

            }
            function vkmsummary_chart() {
                $.ajax({
                    type: "POST",
                    url: "/Cockpit/VKMSummaryData/",
                    data: { 'years': selected, 'chart': true, 'buList': BUList, 'selected_ccxc': selected_ccxc },
                    success: OnSuccess_ChartSummaryData,
                    error: OnError_ChartSummaryData
                });
            }
            function get_bus() {
                $.ajax({
                    type: "POST",
                    url: "/Cockpit/BUs_forpresentNTID_CCXC/",
                    data: { 'ccxc': true, 'selected_ccxc': selected_ccxc },
                    async: false,
                    success: OnSuccess_BUs_forpresentNTID,
                    error: OnError_BUs_forpresentNTID
                });
            }

            function fnCCXCChange(select) {
                debugger;
                selected_ccxc = select.value;
                notify();
                get_bus();
                if (selectedthree != undefined && selectedthree.length == 3) {
                    isthreeyr_flag = true;
                    $.ajax({
                        type: "POST",
                        //async: false,
                        url: "/Cockpit/VKMSummaryData/",
                        data: { 'years': selectedthree, 'chart': true, 'buList': BUList, 'selected_ccxc': selected_ccxc },
                        success: OnSuccess_ChartSummaryData,
                        error: OnError_ChartSummaryData
                    });
                }
                if (current_tab != "threeyr") {
                    $('#twoyr_nav').click();
                }
                $("#VKMSummaryTable").prop('hidden', true);
                $("#chart").prop('hidden', true);
                $("#CostElementDrillDown_Title").prop('hidden', true);
                $("#CostElementDrillDown").prop('hidden', true);
                $("#CategoryDrillDown_Title").prop('hidden', true);
                $("#CategoryDrillDown").prop('hidden', true);
                $("#Itemview_Title").prop('hidden', true);
                $("#RequestTable_Cockpit").prop('hidden', true);


                $("#gen").prop('disabled', false);
                $('#gen').click();



            }


            function OnSuccess_BUs_forpresentNTID(response) {
                debugger;
                BUList = response.data;
                if (!response.success) {
                    $.notify('Unable to load BUs of the current user right now, Please Try again later!', {
                        globalPosition: "top center",
                        className: "error"
                    });
                }
            }
            function OnError_BUs_forpresentNTID(response) {
                $.notify('Unable to load BUs of the current user right now, Please Try again later!', {
                    globalPosition: "top center",
                    className: "warn"
                });
            }


            function OnSuccess_VKMSummaryData(data) {
                debugger;

                dataObjData = eval(data.data.data);
                dataObjCol = eval(data.data.columns);

                debugger;
                if (data.message != "") {


                    vkmsummary = $("#VKMSummaryTable").dxDataGrid({

                        dataSource: dataObjData,
                        showColumnLines: true,
                        showRowLines: true,
                        rowAlternationEnabled: true,
                        // columns: dataObjCol,
                        showBorders: true,
                        export: {
                            enabled: true,
                            fileName: "VKM Summary Details"
                        },
                        remoteOperations: true,
                        showColumnLines: true,
                        showRowLines: true,
                        rowAlternationEnabled: true,
                        allowColumnReordering: true,
                        allowColumnResizing: true,
                        columnChooser: {
                            enabled: true
                        },
                        cssClass: "ColumnsAutomatic",
                        loadPanel: {
                            enabled: true
                        },
                        hoverStateEnabled: {
                            enabled: true
                        },
                        onCellPrepared: function (e) {
                            debugger;

                            if (e.column.dataField.includes(selected2) && e.column.dataField.includes(selected1)) { //&& e.column.dataField === "Value") {

                            }
                            else {
                                if (e.rowType === "data" && e.column.dataField.includes(selected1)) { //&& e.column.dataField === "Value") {

                                    e.cellElement.css("background-color", "#DFABD5"); //pink
                                    //e.cellElement.css("width", "150"); //width djustment

                                }
                                else if (e.rowType === "data" && e.column.dataField.includes(selected2)) { //&& e.column.dataField === "Value") {

                                    e.cellElement.css("background-color", "#AFE1AF");  //Green
                                    //e.cellElement.css("width", "150"); //width djustment
                                }
                                if (e.column.dataField === "CostElement" || e.column.dataField.includes(selected1) || e.column.dataField.includes(selected2)) {
                                    debugger;
                                    e.cellElement.css("width", "150"); //width djustment of cost elt column
                                }
                            }

                            if (e.rowType === "data" && e.column.dataField != undefined && e.column.dataField === "CostElement" && e.value != "Totals") {  //Tooltip - specific CostElement for Comparison

                                e.cellElement.mouseover(function (arg) {
                                    tooltipInstance.option("contentTemplate", function (contentElement) {
                                        contentElement.html(`<div class='tooltipContent'><div><b>Click here to view Comparison of Cost Element DrillDown</b></div>`);
                                    });

                                    tooltipInstance.show(arg.target);
                                });

                                e.cellElement.mouseout(function (arg) {
                                    tooltipInstance.hide();
                                });
                            }

                        },



                        onCellClick: function (e) {
                            debugger;
                            get_bus();

                            if (e.rowType == 'data' && e.column.dataField == "CostElement" && e.value != "Totals") {  //DrillDown of specific CostElement for Comparison
                                costelement_selected = e.value;



                                $("#CostElementDrillDown_Title").prop('hidden', true);
                                $("#CostElementDrillDown").prop('hidden', true);
                                $("#CategoryDrillDown_Title").prop('hidden', true);
                                $("#CategoryDrillDown").prop('hidden', true);
                                $("#Itemview_Title").prop('hidden', true);
                                $("#RequestTable_Cockpit").prop('hidden', true);


                                $.ajax({
                                    type: "POST",
                                    url: "/Cockpit/CostElementDrillDown_comparison/",
                                    data: {
                                        'years': selected, 'CostElement_Chosen': costelement_selected, 'buList': BUList, 'selected_ccxc': selected_ccxc
                                    },
                                    success: OnSuccess_CostElementDrillDown_comparison,
                                    error: OnError_CostElementDrillDown
                                });

                            }

                            document.getElementById("CostElementDrillDown_Title").innerHTML = " COSTELEMENT BASED DRILL DOWN " + " - " + costelement_selected;
                            document.getElementById("CostElementDrillDown_Title").style.fontWeight = "700";
                            $.notify('Loading, Please wait !', {
                                globalPosition: "top center",
                                className: "warn",
                                autoHideDelay: 5000
                            });


                        }

                    });
                    var tooltipInstance = $("#tooltipContainer").dxTooltip({
                        //position: "right"
                    }).dxTooltip("instance");
                    if (current_tab == "twoyr") {
                        $.notify('Comparison Table loaded successfully !', {
                            globalPosition: "top center",
                            className: "success",
                            autoHideDelay: 20000
                        });
                    }


                    $("#VKMSummaryTable").prop('hidden', false);


                    var str = "Compare";
                    var result = str.bold();
                    genText.innerHTML = result;
                    $("#genSpinner").removeClass("fa fa-spinner fa-spin");


                }
                $("#gen").prop('disabled', true);


            }




            function OnError_VKMSummaryData(response) {
                debugger;
                $.notify('Unable to load VKM Summary right now, Please Try again later!', {
                    globalPosition: "top center",
                    className: "warn"
                });
                var str = "Try Again";
                var result = str.bold();
                genText.innerHTML = result;
                $("#genSpinner").removeClass("fa fa-spinner fa-spin");
            }


            function OnSuccess_ChartSummaryData(data) {
                debugger;
                //var chartData = [];

                dataObj = eval(data.data.data);


                //for (i = 0; i < dataObj.length; i++) {

                //    var c_Planned = [];
                //    var c_Utilized = [];
                //    var c_Percentage = [];
                //    //var Totals = [];
                //    debugger;
                //    c_Planned.push({ c_planned: dataObj[i].Planned });
                //    c_Utilized.push({ c_utilized: dataObj[i].Utilized });
                //    c_Percentage.push({ c_percentage: dataObj[i].Percentage_Utilization });
                //    year.push({ year: dataObj[i].Year });
                //    debugger;
                //    //chartData.push({
                //    //    year: dataObj[i].Year, Plannedvkm: c_Planned, Utilizedvkm: c_Utilized, Percentagevkm: c_Percentage
                //    //});

                //    //chartData.push({ year: dataObj[i].Year, plannedMAE: parseInt(dataObj[i].Planned_MAE), plannedNMAE: parseInt(dataObj[i].Planned_Non_MAE), plannedsw: parseInt(dataObj[i].Planned_Software), plannedTotals: parseInt(dataObj[i].Planned_Total), utilizedMAE: parseInt(dataObj[i].Utilized_MAE), utilizedNMAE: parseInt(dataObj[i].Utilized_Non_MAE), utilizedsw: parseInt(dataObj[i].Utilized_Software), utilizedTotals: parseInt(dataObj[i].Utilized_Total), perMAE: parseInt(dataObj[i].Per_MAE_Utilization), perNMAE: parseInt(dataObj[i].Per_NMAE_Utilization), perSW: parseInt(dataObj[i].Per_Software_Utilization), perTotals: parseInt(dataObj[i].Per_Totals_Utilization) });
                //}

                if (selectedthree != undefined && selectedthree.length == 3 && isthreeyr_flag) {

                    $("#chartthree").prop('hidden', true);
                    debugger;
                    $("#chartthree").dxChart({

                        dataSource: dataObj,
                        resolveLabelOverlapping: 'stack',
                        scrollBar: {
                            visible: true
                        },
                        zoomAndPan: {
                            argumentAxis: "both",

                        },
                        //height: 700,
                        //width: 700,
                        size: {
                            height: 400,
                            width: 1400
                        },
                        //title: {
                        //    text: "VKM Comparison Chart (2020 - 2021)",
                        //    font: {
                        //        size: 26,
                        //        weight: 800,
                        //        color: "black"
                        //    },


                        //},

                        //    new DevExpress.data.DataSource({
                        //    store: chartData,

                        //    map: function (item) {
                        //        debugger;
                        //        return $.extend({

                        //            plMAE: item.AllMAE[0].plannedMAE,
                        //            utMAE: item.AllMAE[0].utilizedMAE,
                        //            plNMAE: item.AllNMAE[0].plannedNMAE,
                        //            utNMAE: item.AllNMAE[0].utilizedNMAE,
                        //            plsw: item.AllSW[0].plannedsw,
                        //            utsw: item.AllSW[0].utilizedsw,
                        //            plTotals: item.AllTotals[0].plannedTotals,
                        //            utTotals: item.AllTotals[0].utilizedTotals,
                        //            //year_CostE: item
                        //        }, item);
                        //    }
                        //}),

                        commonSeriesSettings: {
                            argumentField: "Year",
                            type: "bar",
                            hoverMode: "allArgumentPoints",
                            selectionMode: "allArgumentPoints",

                        },




                        series: [

                            {
                                valueField: "Planned", name: "Planned_VKM",
                                label: {

                                    visible: true,

                                    format: {
                                        type: "currency",
                                        precision: 0
                                    },

                                    //    customizeText: function (arg) {
                                    //        return arg.value + ;
                                    //},


                                }
                            },
                            {
                                valueField: "Utilized", name: "Utilized_VKM",
                                label: {

                                    visible: true,
                                    format: {
                                        type: "currency",
                                        precision: 0
                                    }
                                }
                            },


                            //{ valueField: "plMAE", name: "Planned MAE" },
                            //{ valueField: "utMAE", name: "Utilized MAE" },
                            //{ valueField: "plNMAE", name: "Planned Non-MAE" },
                            //{ valueField: "utNMAE", name: "Utilized Non-MAE" },
                            //{ valueField: "plsw", name: "Planned Software" },
                            //{ valueField: "utsw", name: "Utilized Software" },
                            //{ valueField: "plTotals", name: "Planned Total" },
                            //{ valueField: "utTotals", name: "Utilized Total" },
                            {
                                valueField: "Percentage_Utilization",
                                axis: "Percentage_VKM",
                                type: "line",
                                name: "Percentage Utilization",
                                label: {

                                    visible: true,
                                    format: {
                                        type: "fixedpoint",
                                        precision: 0
                                    },
                                    customizeText: function (e) {
                                        return e.valueText + "%";
                                    }
                                }
                            }


                        ],



                        legend: {
                            //position: "outside", // or "outside"
                            //horizontalAlignment: "right", // or "left" | "right"
                            //verticalAlignment: "top", // or "bottom"


                            //horizontalAlignment: "right",
                            //horizontalAlignment: "center", // or "left" | "right"
                            //verticalAlignment: "bottom",
                            //border: { visible: true },
                            //columnCount: 3,
                            font: {
                                color: "black"

                            },

                        },
                        argumentAxis: {
                            //constantLines: [
                            //    { value: 'Totals 2022' }

                            //]//,
                            //label: {

                            //    customizeText: function (e) {

                            //        return "<p style='color:black'>" + e.valueText + "</p>";

                            //    }

                            //}

                        },
                        valueAxis: [


                            {

                                position: 'left',
                                label: {
                                    font: { color: "black" }
                                },
                                valueMarginsEnabled: false,
                                title: {
                                    text: "VKM Budget (in Dollars)",
                                    font: { color: "black" },
                                },
                                //constantLines: [{
                                //    //label: {
                                //    //    text: "Low Average"
                                //    //},
                                //    //width: 2,
                                //    value: 6000000
                                //    //color: "#8c8cff",
                                //    //dashStyle: "dash"
                                //    //paddingLeftRight :
                                //}]
                            },

                            {
                                name: "Percentage_VKM",
                                position: "right",
                                grid: {
                                    visible: true
                                },
                                title: {
                                    text: "Percentage Utilization",
                                    font: { color: "black" },
                                },
                                label: {
                                    font: { color: "black" }
                                },
                                //constantLines: [
                                //    { value: 40 },
                                //    { value: 20 }

                                //]
                            }
                        ],


                        export: {
                            enabled: true,
                            fileName: "VKM Comparison Chart"
                        },
                        tooltip: {
                            enabled: true
                        }
                    });
                    //debugger;
                    //var str = "Compare";
                    //var result = str.bold();
                    //genText.innerHTML = result;
                    //$("#genSpinner").removeClass("fa fa-spinner fa-spin");
                    $("#chartthree").prop('hidden', false);
                    if (current_tab == "threeyr") {
                        debugger;
                        $.notify('Comparison Chart loaded successfully !', {
                            globalPosition: "top center",
                            className: "success",
                            autoHideDelay: 20000
                        });
                    }
                    isthreeyr_flag = false;
                    //$("#gen").prop('disabled', true);

                }
                else {
                    if (selected.length == 2) {
                        debugger;
                        $("#chart").dxChart({

                            dataSource: dataObj,
                            resolveLabelOverlapping: 'stack',
                            scrollBar: {
                                visible: true
                            },
                            zoomAndPan: {
                                argumentAxis: "both",

                            },
                            height: 50,
                            size: {
                                height: 270,
                                width: 1300
                            },
                            //title: {
                            //    text: "VKM Comparison Chart (2020 - 2021)",
                            //    font: {
                            //        size: 26,
                            //        weight: 800,
                            //        color: "black"
                            //    },


                            //},

                            //    new DevExpress.data.DataSource({
                            //    store: chartData,

                            //    map: function (item) {
                            //        debugger;
                            //        return $.extend({

                            //            plMAE: item.AllMAE[0].plannedMAE,
                            //            utMAE: item.AllMAE[0].utilizedMAE,
                            //            plNMAE: item.AllNMAE[0].plannedNMAE,
                            //            utNMAE: item.AllNMAE[0].utilizedNMAE,
                            //            plsw: item.AllSW[0].plannedsw,
                            //            utsw: item.AllSW[0].utilizedsw,
                            //            plTotals: item.AllTotals[0].plannedTotals,
                            //            utTotals: item.AllTotals[0].utilizedTotals,
                            //            //year_CostE: item
                            //        }, item);
                            //    }
                            //}),

                            commonSeriesSettings: {
                                argumentField: "Year",
                                type: "bar",
                                hoverMode: "allArgumentPoints",
                                selectionMode: "allArgumentPoints",

                            },




                            series: [

                                {
                                    valueField: "Planned", name: "Planned_VKM",
                                    label: {

                                        visible: true,
                                        format: {
                                            type: "currency",
                                            precision: 0
                                        },

                                        //    customizeText: function (arg) {
                                        //        return arg.value + ;
                                        //},


                                    }
                                },
                                {
                                    valueField: "Utilized", name: "Utilized_VKM",
                                    label: {

                                        visible: true,
                                        format: {
                                            type: "currency",
                                            precision: 0
                                        }
                                    }
                                },


                                //{ valueField: "plMAE", name: "Planned MAE" },
                                //{ valueField: "utMAE", name: "Utilized MAE" },
                                //{ valueField: "plNMAE", name: "Planned Non-MAE" },
                                //{ valueField: "utNMAE", name: "Utilized Non-MAE" },
                                //{ valueField: "plsw", name: "Planned Software" },
                                //{ valueField: "utsw", name: "Utilized Software" },
                                //{ valueField: "plTotals", name: "Planned Total" },
                                //{ valueField: "utTotals", name: "Utilized Total" },
                                {
                                    valueField: "Percentage_Utilization",
                                    axis: "Percentage_VKM",
                                    type: "line",
                                    name: "Percentage Utilization",
                                    label: {

                                        visible: true,
                                        format: {
                                            type: "fixedpoint",
                                            precision: 0
                                        },
                                        customizeText: function (e) {
                                            return e.valueText + "%";
                                        }
                                    }

                                }


                            ],



                            legend: {
                                //position: "outside", // or "outside"
                                //horizontalAlignment: "right", // or "left" | "right"
                                //verticalAlignment: "top", // or "bottom"


                                //horizontalAlignment: "right",
                                //horizontalAlignment: "center", // or "left" | "right"
                                //verticalAlignment: "bottom",
                                //border: { visible: true },
                                //columnCount: 3,
                                font: {
                                    color: "black"

                                },

                            },
                            argumentAxis: {
                                label: {

                                    customizeText: function (e) {

                                        return "<p style='color:black'>" + e.valueText + "</p>";

                                    }

                                },
                                //constantLines: [
                                //    {
                                //        value: "Totals 2021",

                                //        paddingLeftRight: 100,
                                //        verticalAlignment : "left"

                                //    }

                                //]
                            },
                            valueAxis: [


                                {

                                    position: 'left',
                                    label: {
                                        font: { color: "black" }
                                    },
                                    valueMarginsEnabled: false,
                                    title: {
                                        text: "VKM Budget (in Dollars)",
                                        font: { color: "black" },
                                    }
                                },

                                {
                                    name: "Percentage_VKM",
                                    position: "right",
                                    grid: {
                                        visible: true
                                    },
                                    title: {
                                        text: "Percentage Utilization",
                                        font: { color: "black" },
                                    },
                                    label: {
                                        font: { color: "black" }
                                    }
                                }
                            ],


                            export: {
                                enabled: true,
                                fileName: "VKM Comparison Chart"
                            },
                            tooltip: {
                                enabled: true
                            }
                        });

                        $("#chart").prop('hidden', false);

                        //var str = "Compare";
                        //var result = str.bold();
                        //genText.innerHTML = result;
                        //$("#genSpinner").removeClass("fa fa-spinner fa-spin");

                        if (current_tab == "twoyr") {
                            $.notify('Comparison Chart loaded successfully !', {
                                globalPosition: "top center",
                                className: "success",
                                autoHideDelay: 20000
                            });
                        }

                        //$("#gen").prop('disabled', true);
                    }

                }



            }


            function OnError_ChartSummaryData(response) {
                debugger;
                $.notify('Unable to load VKM Cockpit Chart right now, Please Try again later!', {
                    globalPosition: "top center",
                    className: "warn"
                });

                var str = "Try Again";
                var result = str.bold();
                genText.innerHTML = result;
                $("#genSpinner").removeClass("fa fa-spinner fa-spin");
            }



            function OnSuccess_CostElementDrillDown_comparison(data) {
                debugger;
                var objdata = eval(data.data.data);
                $('#costelement_nav').click();
                if (data.message != "") {

                    CostElementDrillDown = $("#CostElementDrillDown").dxDataGrid({

                        dataSource: objdata,
                        showColumnLines: true,
                        showRowLines: true,
                        rowAlternationEnabled: true,
                        allowColumnReordering: true,
                        allowColumnResizing: true,
                        columnChooser: {
                            enabled: true
                        },
                        filterRow: {
                            visible: true

                        },
                        showBorders: true,
                        export: {
                            enabled: true,
                            fileName: "CostElement Details"
                        },
                        headerFilter: {
                            visible: true,
                            applyFilter: "auto"
                        },
                        selection: {
                            applyFilter: "auto"
                        },
                        loadPanel: {
                            enabled: true
                        },
                        hoverStateEnabled: {
                            enabled: true
                        },
                        paging: {
                            pageSize: 10
                        },
                        searchPanel: {
                            visible: true,
                            width: 240,
                            placeholder: "Search..."
                        },

                        onCellPrepared: function (e) {


                            if (e.rowType === "data" && e.column.dataField != undefined && e.column.dataField === "Category Name") {  //Tooltip - specific CostElement for Comparison

                                e.cellElement.mouseover(function (arg) {
                                    tooltipInstance_costelt.option("contentTemplate", function (contentElement) {
                                        contentElement.html(`<div class='tooltipContent'><div><b>Click here to view Comparison of Category DrillDown</b></div>`);
                                    });

                                    tooltipInstance_costelt.show(arg.target);
                                });

                                e.cellElement.mouseout(function (arg) {
                                    tooltipInstance_costelt.hide();
                                });
                            }

                        },

                        onCellClick: function (e) {
                            debugger;
                            get_bus();

                            if (e.rowType == 'data' && e.column.dataField == "Category Name") {  //DrillDown of specific CostElement for Comparison
                                categoryid_selected = e.value;


                                $("#CategoryDrillDown_Title").prop('hidden', true);
                                $("#CategoryDrillDown").prop('hidden', true);
                                $("#Itemview_Title").prop('hidden', true);
                                $("#RequestTable_Cockpit").prop('hidden', true);

                                debugger;
                                $.ajax({
                                    type: "POST",
                                    url: "/Cockpit/CategoryDrillDown_comparison/",
                                    data: { 'years': selected, 'CostElement_Chosen': costelement_selected, 'Category_Chosen': categoryid_selected, 'buList': BUList, 'selected_ccxc': selected_ccxc },

                                    success: OnSuccess_CategoryDrillDown_comparison,
                                    error: OnError_CategoryDrillDown
                                });

                                document.getElementById("CategoryDrillDown_Title").innerHTML = " CATEGORY BASED DRILL DOWN " + " - " + categoryid_selected;
                                document.getElementById("CategoryDrillDown_Title").style.fontWeight = "700";
                                $.notify('Loading, Please wait !', {
                                    globalPosition: "top center",
                                    className: "warn",
                                    autoHideDelay: 5000
                                });
                            }

                        },

                    });
                    var tooltipInstance_costelt = $("#tooltipContainer_costelt").dxTooltip({
                        // position: "right"
                    }).dxTooltip("instance");

                    $("#CostElementDrillDown_Title").prop('hidden', false);
                    $("#CostElementDrillDown").prop('hidden', false);

                    $.notify('Cost Element drilldown loaded successfully !', {
                        globalPosition: "top center",
                        className: "success",
                        autoHideDelay: 20000
                    });

                    var str = "Compare";
                    var result = str.bold();
                    genText.innerHTML = result;
                    $("#genSpinner").removeClass("fa fa-spinner fa-spin");


                }

                //$('#costelement_nav').css({ "color": "black" });

            }


            function OnError_CostElementDrillDown(response) {
                debugger;
                $.notify('Unable to load CostElement based Drill Down right now, Please Try again later!', {
                    globalPosition: "top center",
                    className: "warn"
                });
            }



            function OnSuccess_CategoryDrillDown_comparison(data) {
                debugger;
                var objdata = eval(data.data.data);
                $('#category_nav').click();


                CategoryDrillDown = $("#CategoryDrillDown").dxDataGrid({

                    dataSource: objdata,
                    showColumnLines: true,
                    showRowLines: true,
                    rowAlternationEnabled: true,
                    allowColumnReordering: true,
                    allowColumnResizing: true,
                    columnChooser: {
                        enabled: true
                    },
                    filterRow: {
                        visible: true

                    },
                    showBorders: true,
                    headerFilter: {
                        visible: true,
                        applyFilter: "auto"
                    },
                    selection: {
                        applyFilter: "auto"
                    },
                    export: {
                        enabled: true,
                        fileName: "Category DrillDown Details"
                    },
                    loadPanel: {
                        enabled: true
                    },
                    hoverStateEnabled: {
                        enabled: true
                    },
                    paging: {
                        pageSize: 10
                    },
                    searchPanel: {
                        visible: true,
                        width: 240,
                        placeholder: "Search..."
                    },

                    onCellPrepared: function (e) {


                        if (e.rowType === "data" && e.column.dataField != undefined && e.column.dataField === "Item Name") {  //Tooltip - specific CostElement for Comparison

                            e.cellElement.mouseover(function (arg) {
                                tooltipInstance_category.option("contentTemplate", function (contentElement) {
                                    contentElement.html(`<div class='tooltipContent'><div><b>Click here to view Item Details</b></div>`);
                                });

                                tooltipInstance_category.show(arg.target);
                            });

                            e.cellElement.mouseout(function (arg) {
                                tooltipInstance_category.hide();
                            });
                        }

                    },

                    onCellClick: function (e) {
                        debugger;
                        get_bus();

                        if (e.rowType == 'data' && e.column.dataField == "Item Name") {  //DrillDown of specific CostElement for Comparison
                            itemname_selected = e.value;


                            $("#Itemview_Title").prop('hidden', true);
                            $("#RequestTable_Cockpit").prop('hidden', true);

                            $.ajax({
                                type: "GET",
                                url: "/Cockpit/ItemID/",
                                //async: false,
                                data: { 'Item_Chosen': itemname_selected },

                                success: OnSuccess_ItemName

                            });
                            function OnSuccess_ItemName(response) {
                                debugger;
                                ItemID = response.data;
                                $.ajax({
                                    type: "POST",
                                    url: "/Cockpit/ItemDrillDown/",
                                    data: { 'CostElement_Chosen': costelement_selected, 'Category_Chosen': categoryid_selected, 'Item_Chosen': ItemID, 'buList': BUList, 'years': selected },
                                    success: OnSuccess_ItemDrillDown,
                                    error: OnError_ItemDrillDown

                                });


                                $.notify('Loading, Please wait !', {
                                    globalPosition: "top center",
                                    className: "warn",
                                    autoHideDelay: 5000
                                });
                            }


                        }

                    },


                });
                var tooltipInstance_category = $("#tooltipContainer_category").dxTooltip({
                    //position: "right"
                }).dxTooltip("instance");


                $("#CategoryDrillDown_Title").prop('hidden', false);
                $("#CategoryDrillDown").prop('hidden', false);

                $.notify('Category drilldown loaded successfully !', {
                    globalPosition: "top center",
                    className: "success",
                    autoHideDelay: 20000
                });
            }


            function OnError_CategoryDrillDown(response) {
                debugger;
                $.notify('Unable to load Category based Drill Down right now, Please Try again later!', {
                    globalPosition: "top center",
                    className: "warn"
                });
            }



            function OnSuccess_ItemDrillDown(response) {
                debugger;
                var objdata_item = response.data;
                $('#item_nav').click();


                dataGridCockpit = $("#RequestTable_Cockpit").dxDataGrid({

                    dataSource: objdata_item,
                    columnResizingMode: "nextColumn",
                    columnMinWidth: 50,
                    columnAutoWidth: true,
                    allowColumnReordering: true,
                    allowColumnResizing: true,
                    columnChooser: {
                        enabled: true
                    },

                    filterRow: {
                        visible: true

                    },
                    showBorders: true,
                    headerFilter: {
                        visible: true,
                        applyFilter: "auto"
                    },
                    selection: {
                        applyFilter: "auto"
                    },
                    export: {
                        enabled: true,
                        fileName: "Item Details"
                    },
                    loadPanel: {
                        enabled: true
                    },
                    paging: {
                        pageSize: 50
                    },
                    searchPanel: {
                        visible: true,
                        width: 240,
                        placeholder: "Search..."
                    },



                    columns: [
                        {
                            dataField: "BU",
                            width: 50,

                            setCellValue: function (rowData, value) {
                                debugger;
                                rowData.BU = value;

                            },
                            lookup: {
                                dataSource: function (options) {

                                    return {

                                        store: BU_list,
                                    };

                                },
                                valueExpr: "ID",
                                displayExpr: "BU"
                            },

                        },



                        {
                            dataField: "OEM",
                            validationRules: [{ type: "required" }],
                            width: 80,
                            lookup: {
                                dataSource: OEM_list,
                                valueExpr: "ID",
                                displayExpr: "OEM"
                            },


                        },
                        {
                            dataField: "DEPT",
                            caption: "Dept",
                            validationRules: [{ type: "required" }],
                            setCellValue: function (rowData, value) {

                                rowData.DEPT = value;
                                rowData.Group = null;

                            },
                            width: 100,
                            lookup: {
                                dataSource: function (options) {

                                    return {

                                        store: DEPT_list,
                                        filter: options.data ? ["Outdated", "=", false] : null


                                    };
                                },

                                valueExpr: "ID",
                                displayExpr: "DEPT"

                            },



                        },
                        {
                            dataField: "Group",
                            width: 100,
                            validationRules: [{ type: "required" }],
                            lookup: {
                                dataSource: function (options) {

                                    return {

                                        store: Group_list,
                                        filter: options.data ? ["Dept", "=", options.data.DEPT] : null
                                    };

                                },
                                valueExpr: "ID",
                                displayExpr: "Group"
                            },



                        },


                        {
                            dataField: "Item_Name",
                            width: 250,
                            validationRules: [{ type: "required" }],

                            lookup: {
                                dataSource: function (options) {

                                    return {

                                        store: Item_list,

                                        filter: options.data ? [["BU", "=", options.data.BU], 'and', ["Deleted", "=", false]] : null
                                    }


                                },
                                valueExpr: "S_No",
                                displayExpr: "Item_Name"
                            },


                        },
                        {
                            dataField: "Category",
                            caption: "Category",
                            validationRules: [{ type: "required" }],
                            lookup: {
                                dataSource: Category_list,
                                valueExpr: "ID",
                                displayExpr: "Category"
                            },
                            allowEditing: false,
                            visible: false,


                        },
                        {
                            dataField: "Cost_Element",

                            lookup: {
                                dataSource: CostElement_list,
                                valueExpr: "ID",
                                displayExpr: "CostElement"
                            },
                            allowEditing: false,
                            visible: false


                        },

                        {
                            dataField: "Required_Quantity",
                            caption: "ReqQuantity",
                            validationRules: [
                                { type: "required" },
                                {
                                    type: "range",
                                    message: "Please enter valid count > 0",
                                    min: 0,
                                    max: 214783647
                                }],
                            dataType: "number",

                            setCellValue: function (rowData, value) {

                                rowData.Required_Quantity = value;

                            }
                        },
                        {
                            dataField: "Reviewed_Quantity",
                            caption: "RevQuantity",

                            dataType: "number"
                        },
                        {
                            dataField: "Ordered_Quantity",

                            visible: false
                        },
                        {
                            dataField: "Unit_Price",

                            visible: false


                        },
                        {
                            dataField: "Total_Price",

                            dataType: "number",
                            format: { type: "currency", precision: 2 },
                            valueFormat: "#0.00",
                            allowEditing: false,
                            visible: false
                        },
                        //Reviewed_Cost
                        {
                            dataField: "Reviewed_Cost",
                            caption: "RevCost",


                            dataType: "number",
                            format: { type: "currency", precision: 2 },
                            valueFormat: "#0.00",
                            allowEditing: false
                        },
                        {
                            dataField: "OrderPrice",

                            format: { type: "currency", precision: 2 },
                            valueFormat: "#0.00",
                            visible: false


                        },


                        {
                            dataField: "Requestor",
                            allowEditing: false,
                            //visible: false
                        },
                        {
                            dataField: "Reviewer_1",
                            allowEditing: false,
                            visible: false
                        },
                        {
                            dataField: "Reviewer_2",
                            allowEditing: false,
                            visible: false
                        },
                        {
                            dataField: "Comments",

                            visible: false

                        },
                        {
                            dataField: "RequestDate",
                            allowEditing: false



                        },

                        //{
                        //    dataField: "LeadTime",
                        //    width: 50,
                        //    caption: "LeadTime (in days)",
                        //    visible: false,
                        //    calculateCellValue: function (rowData) {
                        //        //update the LeadTime
                        //        if (rowData.Item_Name == undefined || rowData.Item_Name == null) {

                        //            leadtime1 = "";
                        //        }

                        //        else {

                        //            $.ajax({

                        //                type: "GET",
                        //                url: "/BudgetingRequest/GetLeadTime",
                        //                data: { 'ItemName': rowData.Item_Name },
                        //                datatype: "json",
                        //                async: false,
                        //                success: success_getleadtime,

                        //            });

                        //            function success_getleadtime(response) {

                        //                if (response == 0)
                        //                    leadtime1 = "";
                        //                else
                        //                    leadtime1 = response;

                        //            }

                        //        }

                        //        return leadtime1;
                        //    }

                        //},
                        {
                            dataField: "Request_Status"
                        }



                    ]

                });
                debugger;
                document.getElementById("Itemview_Title").innerHTML = "ITEM DETAILED VIEW " + " - " + itemname_selected;
                document.getElementById("Itemview_Title").style.fontWeight = "700";

                $("#Itemview_Title").prop('hidden', false);
                $("#RequestTable_Cockpit").prop('hidden', false);

                $.notify('Item Detailed View is loaded successfully !', {
                    globalPosition: "top center",
                    className: "success",
                    autoHideDelay: 20000
                });
            }
            function OnError_ItemDrillDown(response) {

                $.notify('Please Try Again !', {
                    globalPosition: "top center",
                    className: "warn"
                });
            }




            //************************
            //for (var i = 2019; i <= currentYear + 1; i++) {
            //    var option = document.createElement("OPTION");
            //    option.innerHTML = i;
            //    option.value = i;
            //    ddlYears.appendChild(option);
            //    if (option.value == currentYear || option.value == (currentYear + 1) || option.value == (currentYear - 2)) {
            //        if (option.value == currentYear || option.value == (currentYear + 1)) {
            //            //if (option.value == (currentYear - 2)) {
            //            option.defaultSelected = true;
            //            //option.defaultSelected = true;
            //        }
            //        selected = $("#ddlYears").val();
            //    }
            //}

            //debugger;
            //$.ajax({
            //    type: "POST",
            //    url: "/Cockpit/VKMSummaryData/",
            //    data: { 'years': selected },
            //    success: OnSuccess_VKMSummaryData,
            //    error: OnError_VKMSummaryData
            //});
            //debugger;
            //$.ajax({
            //    type: "POST",
            //    url: "/Cockpit/VKMSummaryData/",
            //    data: { 'years': selected, 'chart': true },
            //    success: OnSuccess_ChartSummaryData,
            //    error: OnError_ChartSummaryData
            //});


            //debugger;

            //function OnSuccess_VKMSummaryData(data) {
            //    debugger;
            //    //dataObjCol = eval(data.data.columns);
            //    dataObjData = eval(data.data.data);
            //    vkmsummary = $("#VKMSummaryTable").dxDataGrid({

            //        dataSource: dataObjData,
            //        // columns: dataObjCol,
            //        showBorders: true,
            //        remoteOperations: true,


            //        loadPanel: {
            //            enabled: true
            //        },
            //        onEditorPreparing: function (e) {

            //            e.editorOptions.disabled = true;
            //        }
            //    });
            //}




            //function OnError_VKMSummaryData(response) {
            //    debugger;
            //    $.notify('Unable to load VKM Summary right now, Please Try again later!', {
            //        globalPosition: "top center",
            //        className: "warn"
            //    });
            //}


            //function OnSuccess_ChartSummaryData(data) {
            //    debugger;
            //    //var chartData = [];

            //    dataObj = eval(data.data.data);
            //    //for (i = 0; i < dataObj.length; i++) {

            //    //    var c_Planned = [];
            //    //    var c_Utilized = [];
            //    //    var c_Percentage = [];
            //    //    //var Totals = [];
            //    //    debugger;
            //    //    c_Planned.push({ c_planned: dataObj[i].Planned });
            //    //    c_Utilized.push({ c_utilized: dataObj[i].Utilized });
            //    //    c_Percentage.push({ c_percentage: dataObj[i].Percentage_Utilization });
            //    //    year.push({ year: dataObj[i].Year });
            //    //    debugger;
            //    //    //chartData.push({
            //    //    //    year: dataObj[i].Year, Plannedvkm: c_Planned, Utilizedvkm: c_Utilized, Percentagevkm: c_Percentage
            //    //    //});

            //    //    //chartData.push({ year: dataObj[i].Year, plannedMAE: parseInt(dataObj[i].Planned_MAE), plannedNMAE: parseInt(dataObj[i].Planned_Non_MAE), plannedsw: parseInt(dataObj[i].Planned_Software), plannedTotals: parseInt(dataObj[i].Planned_Total), utilizedMAE: parseInt(dataObj[i].Utilized_MAE), utilizedNMAE: parseInt(dataObj[i].Utilized_Non_MAE), utilizedsw: parseInt(dataObj[i].Utilized_Software), utilizedTotals: parseInt(dataObj[i].Utilized_Total), perMAE: parseInt(dataObj[i].Per_MAE_Utilization), perNMAE: parseInt(dataObj[i].Per_NMAE_Utilization), perSW: parseInt(dataObj[i].Per_Software_Utilization), perTotals: parseInt(dataObj[i].Per_Totals_Utilization) });
            //    //}
            //    debugger;


            //    $("#chart").dxChart({

            //        dataSource: dataObj,
            //        //    new DevExpress.data.DataSource({
            //        //    store: chartData,

            //        //    map: function (item) {
            //        //        debugger;
            //        //        return $.extend({

            //        //            plMAE: item.AllMAE[0].plannedMAE,
            //        //            utMAE: item.AllMAE[0].utilizedMAE,
            //        //            plNMAE: item.AllNMAE[0].plannedNMAE,
            //        //            utNMAE: item.AllNMAE[0].utilizedNMAE,
            //        //            plsw: item.AllSW[0].plannedsw,
            //        //            utsw: item.AllSW[0].utilizedsw,
            //        //            plTotals: item.AllTotals[0].plannedTotals,
            //        //            utTotals: item.AllTotals[0].utilizedTotals,
            //        //            //year_CostE: item
            //        //        }, item);
            //        //    }
            //        //}),

            //        commonSeriesSettings: {
            //            argumentField: "Year",
            //            type: "bar",
            //            hoverMode: "allArgumentPoints",
            //            selectionMode: "allArgumentPoints",

            //        },




            //        series: [

            //            {
            //                valueField: "Planned", name: "Planned_VKM",
            //                label: {

            //                    visible: true,
            //                    format: {
            //                        type: "currency",
            //                        precision: 0
            //                    },

            //                //    customizeText: function (arg) {
            //                //        return arg.value + ;
            //                //},


            //                }},
            //            {
            //                valueField: "Utilized", name: "Utilized_VKM",
            //                label: {

            //                    visible: true,
            //                    format: {
            //                        type: "currency",
            //                        precision: 0
            //                    }
            //                } },


            //            //{ valueField: "plMAE", name: "Planned MAE" },
            //            //{ valueField: "utMAE", name: "Utilized MAE" },
            //            //{ valueField: "plNMAE", name: "Planned Non-MAE" },
            //            //{ valueField: "utNMAE", name: "Utilized Non-MAE" },
            //            //{ valueField: "plsw", name: "Planned Software" },
            //            //{ valueField: "utsw", name: "Utilized Software" },
            //            //{ valueField: "plTotals", name: "Planned Total" },
            //            //{ valueField: "utTotals", name: "Utilized Total" },
            //            {
            //                valueField: "Percentage_Utilization",
            //                axis: "Percentage_VKM",
            //                type: "line",
            //                name: "Percentage Utilization",
            //                label: {

            //                    visible: true,
            //                    format: {
            //                        type: "fixedpoint",
            //                        precision: 0
            //                    },
            //                    customizeText: function (e) {
            //                        return  e.valueText + "%";
            //                    }
            //                }
            //            }


            //        ],



            //        legend: {
            //            horizontalAlignment: "right",
            //            horizontalAlignment: "center", // or "left" | "right"
            //            verticalAlignment: "bottom",
            //            border: { visible: true },
            //            columnCount: 3,

            //        },

            //        valueAxis: [


            //            {

            //                position: 'left',

            //                valueMarginsEnabled: false,
            //                title: {
            //                    text: "VKM Budget (in Dollars)"
            //                }
            //            },

            //            {
            //                name: "Percentage_VKM",
            //                position: "right",
            //                grid: {
            //                    visible: true
            //                },
            //                title: {
            //                    text: "Percentage Utilization"
            //                }
            //            }
            //        ],


            //        title: "VKM Comparison Chart (2020 - 2021)",
            //        "export": {
            //            enabled: true
            //        },
            //        tooltip: {
            //            enabled: true
            //        }
            //    });
            //}

            //function OnError_ChartSummaryData(response) {
            //    debugger;
            //    $.notify('Unable to load VKM Cockpit Chart right now, Please Try again later!', {
            //        globalPosition: "top center",
            //        className: "warn"
            //    });
            //}
            $('#item_nav').click(function () {

                //window.location.href = params;
                $('#category_view').prop('hidden', true);
                $('#twoyr_view').prop('hidden', true);
                $('#costelement_view').prop('hidden', true);
                $('#item_view').prop('hidden', false);
                $('#Itemview_Title').prop('hidden', false);
                $('#threeyr_view').prop('hidden', true);

                var bd1 = document.getElementById("item_nav");
                bd1.style.color = "blue";
                var bd2 = document.getElementById("costelement_nav");
                bd2.style.color = "grey";
                var bd3 = document.getElementById("category_nav");
                bd3.style.color = "grey";
                var bd4 = document.getElementById("twoyr_nav");
                bd4.style.color = "grey";
                var bd5 = document.getElementById("threeyr_nav");
                bd5.style.color = "grey";

            });
            $('#costelement_nav').click(function () {

                $('#category_view').prop('hidden', true);
                $('#twoyr_view').prop('hidden', true);
                $('#costelement_view').prop('hidden', false);
                $('#item_view').prop('hidden', true);
                $('#threeyr_view').prop('hidden', true);
                //$('#costelement_nav').css({ "color": "black" });

                var bd1 = document.getElementById("item_nav");
                bd1.style.color = "grey";
                var bd2 = document.getElementById("costelement_nav");
                bd2.style.color = "blue";
                var bd3 = document.getElementById("category_nav");
                bd3.style.color = "grey";
                var bd4 = document.getElementById("twoyr_nav");
                bd4.style.color = "grey";
                var bd5 = document.getElementById("threeyr_nav");
                bd5.style.color = "grey";

            });
            $('#category_nav').click(function () {

                $('#category_view').prop('hidden', false);
                $('#costelement_view').prop('hidden', true);
                $('#twoyr_view').prop('hidden', true);
                $('#item_view').prop('hidden', true);
                $('#threeyr_view').prop('hidden', true);
                //$('#category_nav').css({ "color": "black" });

                var bd1 = document.getElementById("item_nav");
                bd1.style.color = "grey";
                var bd2 = document.getElementById("costelement_nav");
                bd2.style.color = "grey";
                var bd3 = document.getElementById("category_nav");
                bd3.style.color = "blue";
                var bd4 = document.getElementById("twoyr_nav");
                bd4.style.color = "grey";
                var bd5 = document.getElementById("threeyr_nav");
                bd5.style.color = "grey";

            });
            $('#twoyr_nav').click(function () {
                current_tab = "twoyr";
                $('#twoyr_view').prop('hidden', false);
                $('#costelement_view').prop('hidden', true);
                $('#category_view').prop('hidden', true);
                $('#item_view').prop('hidden', true);
                $('#threeyr_view').prop('hidden', true);
                //$('#twoyr_nav').css({ "color": "black" });

                var bd1 = document.getElementById("item_nav");
                bd1.style.color = "grey";
                var bd2 = document.getElementById("costelement_nav");
                bd2.style.color = "grey";
                var bd3 = document.getElementById("category_nav");
                bd3.style.color = "grey";
                var bd4 = document.getElementById("twoyr_nav");
                bd4.style.color = "blue";
                var bd5 = document.getElementById("threeyr_nav");
                bd5.style.color = "grey";
            });
            $('#threeyr_nav').click(function () {
                current_tab = "threeyr";
                $('#twoyr_view').prop('hidden', true);
                $('#costelement_view').prop('hidden', true);
                $('#category_view').prop('hidden', true);
                $('#item_view').prop('hidden', true);
                $('#threeyr_view').prop('hidden', false);

                var bd1 = document.getElementById("item_nav");
                bd1.style.color = "grey";
                var bd2 = document.getElementById("costelement_nav");
                bd2.style.color = "grey";
                var bd3 = document.getElementById("category_nav");
                bd3.style.color = "grey";
                var bd4 = document.getElementById("twoyr_nav");
                bd4.style.color = "grey";
                var bd5 = document.getElementById("threeyr_nav");
                bd5.style.color = "blue";

            });


            function notify() {
                $.notify('Comparison Table and Chart will be rendered here. Please wait !!', {
                    globalPosition: "top center",
                    className: "info",
                    autoHideDelay: 20000
                });
            }
        </script>
    }





</head>
<body >
    @* Hide Vertical scrollbar *@
    <div>
        <table>
            <tr>
                <td><h3><b> VKM Cockpit Options </b></h3></td>
                <td>
                    <img class="card-img mx-auto d-block" src="~/Content/images/vkmcockpit.png" style="width:40px;height:35px;" alt="VKM Cockpit" />
                </td>
                <td style="top:70px;position:absolute; right:4px;">
                    <label style="text-align:right;font-size: 17px;font-weight: bold; padding-left:75px;padding-right: 65px; background-color: forestgreen; color: white; right: 15px; position: absolute;" class="">  View  </label>
                </td>

            </tr>

        </table>
    </div>

    @*<br />*@
<div

    @*<td rowspan="2"*@
    class="" id="Site_drpdwn_projtable" style="top: 105px; position: absolute; right: 15px; padding-bottom: 10px;">
    <select name="CC_XC" id="ddlCC_XC" class="selectpicker show-tick border border-success rounded" data-width="180px" onchange="fnCCXCChange(this)" title="Choose for CC view" style="cursor:pointer;" data-live-search="true" autocomplete="off" data-display="static" data-actions-box="true" data-dropup-auto="false">
        <option>NE-CC</option>
        <option>NE-XC</option>
        <option selected>Custom</option>
    </select>
    @*</td>*@
</div>
    @*<nav class="navbar navbar-light">*@
<div id="tabs">
    @*<ul class="nav nav-tabs mr-auto border-0" role="tablist" id="myTab" style="background-color: #005691;margin-top: 22px;">


            <li>
                <a class="navbar-brand" href="#">
                    <img src="~/Content/images/vkm_cockpit.png" style="width:20px;height:35px;padding-bottom: 15px;" alt="Cockpit">
                </a>
            </li>
            <li class="nav-item">
                <text id="twoyr_nav" class="nav-link active tabelement_color_default" data-toggle="tab" role="tab" aria-selected="true" aria-controls="twoyr_tabc" style="cursor:pointer;  "><b> Two Year view </b> </text>

            </li>
            <li class="nav-item">
                <text id="threeyr_nav" class="nav-link tabelement_color_default" data-toggle="tab" role="tab" aria-selected="false" aria-controls="threeyr_tabc" style="cursor:pointer;  "><b> Three Year view </b></text>
            </li>
            <li class="nav-item">
                <text id="costelement_nav" data-toggle="tab" role="tab" class="nav-link tabelement_color_default" aria-selected="false" aria-controls="costelement_tabc" style="cursor:pointer;"><b> Cost Element </b></text>
            </li>
            <li class="nav-item">
                <text id="category_nav" data-toggle="tab" role="tab" class="nav-link tabelement_color_default" aria-selected="false" aria-controls="category_tabc" style="cursor:pointer; "><b> Category </b></text>
            </li>
            <li class="nav-item">
                <text id="item_nav" data-toggle="tab" role="tab" class="nav-link tabelement_color_default" aria-selected="false" aria-controls="item_tabc" style="cursor:pointer;"><b> Item </b></text>
            </li>

        </ul>*@
    <div>

        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item active" style="color:blue;" id="twoyr_nav" aria-current="page"> Two Year View  </li>
                <li class="breadcrumb-item active" id="threeyr_nav" aria-current="page">  Three Year View  </li>
                <li class="breadcrumb-item active" id="costelement_nav" aria-current="page"> Cost Element  </li>
                <li class="breadcrumb-item active" id="category_nav" aria-current="page">  Category  </li>
                <li class="breadcrumb-item active" id="item_nav" aria-current="page"> Item </li>
            </ol>
        </nav>
    </div>



    @*<div class="tab-content" id="myTabContent">
        <div class="tab-pane fade show active" id="twoyr_tabc" role="tabpanel" aria-labelledby="twoyr_nav"></div>
        <div class="tab-pane fade" id="threeyr_tabc" role="tabpanel" aria-labelledby="threeyr_nav"></div>
        <div class="tab-pane fade" id="costelement_tabc" role="tabpanel" aria-labelledby="costelement_nav"></div>
        <div class="tab-pane fade" id="category_tabc" role="tabpanel" aria-labelledby="category_nav"></div>
        <div class="tab-pane fade" id="item_tabc" role="tabpanel" aria-labelledby="item_nav"></div>
    </div>*@






</div>
    <div class="dataContainer_fortabContent rounded shadow-sm">
        <div id="twoyr_view">

            <table style="margin:auto; margin-top: 5px;">
                <tr>
                    <td rowspan="2" class=""> <label style="text-align:right;font-size: 17px;font-weight: bold; padding-left:45px;padding-right: 40px; background-color: forestgreen;color:white;" class="">  VKM Year 1  </label></td>
                    <td rowspan="2" class=""> <label style="text-align:right;font-size: 17px;font-weight: bold; padding-left:45px;padding-right: 40px;background-color:forestgreen;color:white;" class="">  VKM Year 2  </label></td>

                </tr>
            </table>
            <table style="margin:auto;">
                <tr>


                    @*<td rowspan="2" class=""> <label style="text-align:right; padding-left: 50px; background-color: #e60000; color: white;" class="">Select for CC View:</label></td>*@


                    @*<td rowspan="2" class=""> <label style="text-align:right;  padding-left: 50px; background-color:palevioletred;color:white;" class=""> Select VKM Year1: </label></td>*@

                    <td rowspan="2" class="">
                        <select id="ddlYears1" class="selectpicker show-tick border border-success rounded" style="cursor: pointer; color:#DFABD5;
                    " data-live-search="true" data-actions-box="true" autocomplete="off" data-width="180px" onchange="fnYear1Change(this)" @*multiple data-max-options="3"*@></select>
                    </td>

                    @*<td rowspan="2" class=""> <label style="text-align:right;  padding-left: 50px; background-color: seagreen; color: white;" class=""> Select VKM Year2: </label></td>*@


                    <td rowspan="2" class="">
                        <select id="ddlYears2" class="selectpicker show-tick border border-success rounded" style="cursor: pointer;color:#AFE1AF;
                    " data-live-search="true" data-actions-box="true" data-width="180px" autocomplete="off" data-display="static" data-dropup-auto="false" onchange="fnYear2Change(this)"></select>
                    </td>

                    <td id="button" style="float:right" hidden>
                        <button type="button" class="btn btn-info create" id="gen"><b id="genText">Compare</b><i id="genSpinner"></i></button>
                    </td>
                </tr>
            </table>


            <table>

                <tr>
                    <td align="center" style="padding-right: 10px; width: 85%;">
                        <div id="tooltipContainer"></div>
                        <div id="VKMSummaryTable" style="padding-top: 5px;width: 100%;"></div>
                    </td>
                </tr>
                <tr>
                    <td align="center">
                        <div class="demo-container">
                            <div id="chart" style="width:80%;"></div>
                        </div>
                    </td>

                </tr>

            </table>
        </div>

        <div id="threeyr_view" hidden>

            <table style="margin:auto; margin-top: 10px;">
                <tr>

                    <td rowspan="2" class=""> <label style=" font-size: 17px;font-weight: bold;text-align:right;padding:5px; padding-left:42px;padding-right: 42px; background-color: forestgreen; color: white;" class="">  VKM Year 1  </label></td>
                    <td rowspan="2" class=""> <label style=" font-size: 17px;font-weight: bold;text-align:right;padding:5px; padding-left:42px;padding-right: 42px; background-color: forestgreen;color:white;" class="">  VKM Year 2  </label></td>
                    <td rowspan="2" class=""> <label style=" font-size: 17px;font-weight: bold; text-align: right; padding: 5px; padding-left:42px; padding-right: 42px; background-color: forestgreen; color: white;" class="">  VKM Year 3  </label></td>

                </tr>
            </table>
            <table style="margin:auto;">
                <tr>


                    @*<td rowspan="2" class=""> <label style="text-align:right; padding-left: 50px; background-color: #e60000; color: white;" class="">Select for CC View:</label></td>*@
                    <td rowspan="2" class="">
                        <select id="ddlYearsthree_1" class="selectpicker show-tick border border-success rounded" style="cursor: pointer;
                    " data-live-search="true" data-actions-box="true" autocomplete="off" data-width="180px" title="Choose VKM Year 1" onchange="fnYearthree1Change(this)" @*multiple data-max-options="3"*@></select>
                    </td>

                    @*<td rowspan="2" class=""> <label style="text-align:right;  padding-left: 50px; background-color:palevioletred;color:white;" class=""> Select VKM Year1: </label></td>*@

                    <td rowspan="2" class="">
                        <select id="ddlYearsthree_2" class="selectpicker show-tick border border-success rounded" style="cursor: pointer;
                    " data-live-search="true" data-actions-box="true" autocomplete="off" title="Choose VKM Year 2" data-width="180px" onchange="fnYearthree2Change(this)" @*multiple data-max-options="3"*@></select>
                    </td>

                    @*<td rowspan="2" class=""> <label style="text-align:right;  padding-left: 50px; background-color: seagreen; color: white;" class=""> Select VKM Year2: </label></td>*@

                    <td rowspan="2" class="">
                        <select id="ddlYearsthree_3" class="selectpicker show-tick border border-success rounded" style="cursor: pointer;
                    " data-live-search="true" data-actions-box="true" data-width="180px" title="Choose VKM Year 3" autocomplete="off" onchange="fnYearthree3Change(this)"></select>
                    </td>

                    <td id="button" style="float:right" hidden>
                        <button type="button" class="btn btn-info create" id="gen"><b id="genText">Compare</b><i id="genSpinner"></i></button>
                    </td>
                </tr>
            </table>


            <table style="margin:auto;">

                <tr align="center">
                    <td align="center">
                        <div class="demo-container">
                            <div id="chartthree" style="width:100%;"></div>
                        </div>
                    </td>

                </tr>

            </table>
        </div>

        <div id="costelement_view">
            <table align="center" style="width: 70%;">

                <tr>
                    <td><h5 id="CostElementDrillDown_Title" style="text-align:center;margin-top:20px;" hidden></h5></td>
                </tr>
                <tr align="center" style="display:inline-block">

                    <td style="padding-right: 10px">
                        <div id="tooltipContainer_costelt"></div>
                        <div id="CostElementDrillDown" style="width: 90%;" hidden></div>
                    </td>

                </tr>

            </table>
        </div>

        <div id="category_view">
            <table align="center" style="width: 70%;">

                <tr>
                    <td><h5 id="CategoryDrillDown_Title" style="text-align:center;margin-top:20px;" hidden></h5></td>
                </tr>
                <tr align="center">
                    <td style="padding-right: 10px">
                        <div id="tooltipContainer_category"></div>
                        <div id="CategoryDrillDown" style=" width: 90%;" hidden></div>
                    </td>
                </tr>
            </table>
        </div>


        <div id="item_view">
            <table align="center">
                <tr>
                    <td><h5 id="Itemview_Title" style="text-align:center;margin-top:20px;" hidden></h5></td>
                </tr>

            </table>

            <table align="center" id="RequestTable_Cockpit" class="table table-bordered display compact nowrap cell-border" style="width: 100%;">
            </table>
        </div>

    </div>










</body>

</html>





