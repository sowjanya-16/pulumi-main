@model LC_Reports_V1.Models.LCfilterInfo
@{
    ViewBag.Title = "Oss Lab Details";
    Layout = "~/Views/Shared/_Layout_OSS.cshtml";
}
@*<h3>Add/Edit Details</h3>*@

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <!-- Google tag (gtag.js) -->
    <script async=async src="https://www.googletagmanager.com/gtag/js?id=G-GKX0NP1SYR"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'G-GKX0NP1SYR');
    </script>
    <style>
        body {
            font-family: Arial, Helvetica, sans-serif;
        }

        /* The Modal (background) */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
            -webkit-animation-name: fadeIn; /* Fade in the background */
            -webkit-animation-duration: 0.4s;
            animation-name: fadeIn;
            animation-duration: 0.4s
        }

        /* Modal Content */
        .modal-content {
            position: fixed;
            top: 0;
            background-color: #fefefe;
            width: 100%;
            -webkit-animation-name: slideIn;
            -webkit-animation-duration: 0.4s;
            animation-name: slideIn;
            animation-duration: 0.4s
        }

        /* The Close Button */
        .close {
            color: white;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }

        .modal-header {
            padding: 2px 16px;
            background-color: #5cb85c;
            color: white;
        }

        .modal-body {
            padding: 2px 16px;
        }

        .modal-footer {
            padding: 2px 16px;
            background-color: #5cb85c;
            color: white;
        }

        /* Add Animation */
        -webkit-keyframes slideIn {
            from

        {
            bottom: -300px;
            opacity: 0
        }

        to {
            bottom: 0;
            opacity: 1
        }

        }

        keyframes slideIn {
            from

        {
            bottom: -300px;
            opacity: 0
        }

        to {
            bottom: 0;
            opacity: 1
        }

        }

        -webkit-keyframes fadeIn {
            from

        {
            opacity: 0
        }

        to {
            opacity: 1
        }

        }

        keyframes fadeIn {
            from

        {
            opacity: 0
        }

        to {
            opacity: 1
        }
        }
    </style>

    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>SmartLab - Reporting Options</title>


    <script src="~/Content/employees.js"></script>


    <link href="~/Content/LabReportPage.css" rel="stylesheet" />
    <link href="~/Content/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" />




    @section Scripts{

        <script type="text/javascript">

            //$(window).on("load", function () {
            //    localStorage.clear();
            //    $(".loader-wrapper").fadeOut("slow");

            //});


            $(".custom-file-input").on("change", function () {
                var fileName = $(this).val().split("\\").pop();
                $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
            });


            //window.onload = function () {
            $(document).ready(function () {
                localStorage.clear();
                $(".loader-wrapper").fadeOut("slow");

                //$("#RequestTable").prop('hidden', false);



                //genSpinner_load.classList.add('fa');
                //genSpinner_load.classList.add('fa-spinner');
                //genSpinner_load.classList.add('fa-pulse');
                //document.getElementById("loadpanel").style.display = "block";

                showgrid();

                var genSpinner = document.querySelector("#UploadSpinner");
                genSpinner.classList.remove('fa');
                genSpinner.classList.remove('fa-spinner');
                genSpinner.classList.remove('fa-pulse');
                //checkFileAPI();
            });

            function showgrid() {
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "/OssLabAdmin/GetLabDetails",
                    datatype: "json",
                    //async: true,
                    success: function (data) {
                        debugger;
                        if (data.success == false) {
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "error"
                            });
                        }
                        else {

                            //if (data.data.Data.Content.length > 0) {
                            //    debugger;
                            //    //var res = JSON.parse(data.data.Data.Content);
                            //    var res = eval(data.data.Data.Content);
                            //    LoadDataGrid(res);

                            //}
                            if (data.data.length > 0) {
                                debugger;
                                //var res = JSON.parse(data.data.Data.Content);
                                //var res = eval(data.data.Data.Content);
                                LoadDataGrid(data.data);

                            }
                            else {
                                $('#myModal').modal();
                            }

                        }
                    },

                    error: function (jqXHR, exception) {
                        debugger;
                        var msg = '';
                        if (jqXHR.status === 0) {
                            msg = 'Not connect.\n Verify Network.';
                        } else if (jqXHR.status == 404) {
                            msg = 'Requested page not found. [404]';
                        } else if (jqXHR.status == 500) {
                            msg = 'Internal Server Error [500].';
                        } else if (exception === 'parsererror') {
                            msg = 'Requested JSON parse failed.';
                        } else if (exception === 'timeout') {
                            msg = 'Time out error.';
                        } else if (exception === 'abort') {
                            msg = 'Ajax request aborted.';
                        } else {
                            msg = 'Uncaught Error.\n' + jqXHR.responseText;
                        }
                        $('#post').html(msg);
                    }



                });
            }
            //$(document).ready(function () {
            //    debugger;
            //    LoadDataGrid();

            //});


            //function LoadDataGrid() {
            //    debugger;
            //    $("#gridContainer").dxDataGrid({
            //        dataSource: LabDetails,
            //        editing: {
            //            mode: "row",
            //            allowUpdating: true,
            //            allowDeleting: false,
            //            allowAdding: false
            //        },
            //        columns: ["LabId", "PCName", "Location", "Lab", "ProjectChange", "CurrentProject", "Category", "Type", "Responsible", "SetupType", "FromWeek", "ToWeek"],
            //        //columns: ["Lab_Name"],
            //        showBorders: true
            //    });


            function LoadDataGrid(data) {
                debugger;
                $("#gridContainer").dxDataGrid({
                    dataSource: data,
                    paging: {
                        enabled: false
                    },
                    showBorders: true,
                    allowSorting: false,
                    filterRow: {
                        visible: true,
                        applyFilter: "auto"
                    },
                    headerFilter: {
                        visible: true,
                        applyFilter: "auto"
                    },
                    export: {
                        enabled: true
                    },
                    columns: [{
                        caption: "TSG4",
                        width: 160,
                        dataField: "LabId",
                        allowEditing: false

                        //validationRules: [{
                        //    type: "required"
                        //},
                        //    {
                        //        type: "async",
                        //        message: "Please enter the valid labname",
                        //        validationCallback: function (params) {
                        //            debugger;
                        //            return $.ajax({
                        //                url: "/OssLabAdmin/ValidateLabID",
                        //                type: 'POST',
                        //                dataType: 'json',
                        //                contentType: 'application/json',
                        //                data: JSON.stringify({
                        //                    labid: params.value
                        //                })
                        //            });
                        //        }
                        //    }]

                        //area: "row"
                        //expanded: true
                    },
                    {
                        caption: "PC Name",
                        width: 200,
                        dataField: "FQDN",
                        area: "row",
                        expanded: true
                    }, {
                        caption: "Location",
                        width: 120,
                        dataField: "Location",
                        area: "row",
                        expanded: true
                    },
                    {
                        caption: "Lab",
                        width: 120,
                        dataField: "Lab"
                        //area: "row"
                        //expanded: true
                    }, {
                        caption: "Project Change",
                        width: 150,
                        dataField: "ProjectChange",
                        //dataType: "date"
                        area: "row",
                        expanded: true
                        //dataType: "date"
                    }, {
                        caption: "Current Project",
                        width: 150,
                        dataField: "CurrentProject"
                        //area: "row"
                        //expanded: true
                    }, {
                        caption: "Category",
                        width: 150,
                        dataField: "Category"
                        //area: "row"
                        //expanded: true
                    }, {
                        caption: "Type",
                        width: 120,
                        dataField: "Type"
                        //area: "row"
                        //expanded: true
                    }, {
                        caption: "Responsible",
                        width: 150,
                        dataField: "Responsible"
                        //area: "row"
                        //expanded: true
                    }, {
                        caption: "Setup Type",
                        width: 120,
                        dataField: "SetupType"
                        //area: "row"
                        //expanded: true
                    }
                        //, {
                        //caption: "Maintenance",
                        //columns: [{
                        //    caption: "From",
                        //    width: 140,
                        //    dataField: "FromWeek",
                        //    dataType: "datetime"
                        //    //area: "row"
                        //    //expanded: true
                        //}, {
                        //    caption: "To",
                        //    width: 140,
                        //    dataField: "ToWeek",
                        //    dataType: "datetime"
                        //    //area: "row"
                        //    //expanded: true
                        //}
                        //]
                        //}
                    ],

                    editing: {
                        mode: "row",
                        allowUpdating: true,
                        allowDeleting: false
                        //allowAdding: true
                    },
                    onRowInserted: function (e) {
                        debugger;
                        Selected = [];
                        Selected.push(e.data);
                        UpdateData(Selected);
                    },
                    onRowUpdated: function (e) {
                        debugger;
                        //alert(e.newData);
                        Selected = [];
                        Selected.push(e.data);
                        UpdateData(Selected);
                    }

                }).dxDataGrid("instance");;

            }

            function UpdateData(id1) {
                debugger;
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "/OssLabAdmin/UpdateLabDetails",
                    data: JSON.stringify({ item: id1[0] }),
                    datatype: "json",
                    success: function (data) {
                        alert("Updated");

                    },
                    error: function (jqXHR, exception) {
                        debugger;
                        var msg = '';
                        if (jqXHR.status === 0) {
                            msg = 'Not connect.\n Verify Network.';
                        } else if (jqXHR.status == 404) {
                            msg = 'Requested page not found. [404]';
                        } else if (jqXHR.status == 500) {
                            msg = 'Internal Server Error [500].';
                        } else if (exception === 'parsererror') {
                            msg = 'Requested JSON parse failed.';
                        } else if (exception === 'timeout') {
                            msg = 'Time out error.';
                        } else if (exception === 'abort') {
                            msg = 'Ajax request aborted.';
                        } else {
                            msg = 'Uncaught Error.\n' + jqXHR.responseText;
                        }
                        $('#post').html(msg);
                    },
                });
            }

            var rdata;//this variable needs to be named the same as the parameter in the function call specified for the AjaxOptions.OnSuccess

            function mySuccessFuntion(rdata) {
                debugger;
                if (rdata.success) {
                    $.notify('Data Uploaded Successfully', {
                        globalPosition: "top center",
                        className: "success"
                    });
                }
                else if (rdata.success == false) {
                    $.notify(rdata.errormsg, {
                        globalPosition: "top center",
                        className: "warn"
                    });
                }
                else {

                }
                showgrid();

                //function success_refresh_getdata(response) {
                //    debugger;
                //    var LabList = response.data;


                //}

                //function error_refresh_getdata(response) {
                //    //error
                //}






            }

            function myFailureFuntion() {
                //Failure code
            }

            window.addEventListener("submit", function (e) {
                debugger;
                var form = e.target;
                if (form.getAttribute("enctype") === "multipart/form-data") {
                    if (form.dataset.ajax) {
                        //to sync form events with request events
                        e.preventDefault();//written to block existing function -like double click on submit - incase of redundant call - only 1 submit fn should run at a time
                        e.stopImmediatePropagation();

                        //necessary for uploading files since event of uploading files should be synchronous b/w client and server though we use ajax(asynchronous call)
                        var xhr = new XMLHttpRequest();//if another request sent->refresh browser- w/o refreshing pg
                        //opening the import form
                        xhr.open(form.method, form.action);//method-POST, action-webpg; link triggers the actnresult -> returning the view to index.cshtml->renders form

                        //set the template (sending format) so that server understands how to parse it
                        xhr.setRequestHeader("x-Requested-With", "XMLHttpRequest"); // this allows 'Request.IsAjaxRequest()' to work in the controller code

                        xhr.onreadystatechange = function () {

                            if (xhr.readyState === XMLHttpRequest.DONE && xhr.status == 200) { //function executes once response is rx from the server


                                try {
                                    rdata = JSON.parse(xhr.responseText); //returned data to be parsed if it is a JSON object

                                }
                                catch (e) {
                                    rdata = xhr.responseText;
                                }
                                if (form.dataset.ajaxSuccess) {
                                    eval(form.dataset.ajaxSuccess); //converts function text to real function and executes (not very safe though)

                                }
                                else if (form.dataset.ajaxFailure) {
                                    eval(form.dataset.ajaxFailure);
                                }

                                if (form.dataset.ajaxUpdate) {

                                    var genSpinner = document.querySelector("#UploadSpinner");
                                    genSpinner.classList.remove('fa');
                                    genSpinner.classList.remove('fa-spinner');
                                    genSpinner.classList.remove('fa-pulse');

                                }
                            }
                        };

                        xhr.send(new FormData(form)); //send a request to server after importing
                    }
                }
            }, true);



        </script>

        <script>
            // Get the modal
            var modal = document.getElementById("myModal");

            // Get the button that opens the modal
            var btn = document.getElementById("myBtn");

            // Get the <span> element that closes the modal
            var span = document.getElementsByClassName("close")[0];

            // When the user clicks the button, open the modal
            btn.onclick = function () {
                modal.style.display = "block";
            }

            // When the user clicks on <span> (x), close the modal
            span.onclick = function () {
                modal.style.display = "none";
            }

            // When the user clicks anywhere outside of the modal, close it
            window.onclick = function (event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            }

            debugger;
            $.ajax({
                type: "GET",
                url: "/OssLabAdmin/ReloadTimeConfigurer/",
                async: true,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    debugger;
                    $("#nft").dxDateBox({
                        type: "time",
                        showClearButton: true,
                        value: data.data.night_fromtime

                    });

                    $("#ntt").dxDateBox({
                        type: "time",
                        showClearButton: true,
                        value: data.data.night_totime
                    });

                    $("#wft").dxDateBox({
                        type: "time",
                        showClearButton: true,
                        value: data.data.weekend_fromtime
                    });

                    $("#wtt").dxDateBox({
                        type: "time",
                        showClearButton: true,
                        value: data.data.weekend_totime
                    });




                }, error: function (err) {

                    $.notify('Unable to fetch Previous Timings. Please Set the new Timings.', {
                        globalPosition: "top center",
                        className: "warn"
                    });
                }

            });







            function SaveChanges() {

                debugger;
                //var night_from_time =  $("#nft").val();
                //var night_to_time = $("#ntt").val();
                //var weekend_from_time =  $("#wft").val();
                //var weekend_to_time = $("#wtt").val();

                var nightfromtime = $("#nft").dxDateBox("option", "value");
                var nighttotime = $("#ntt").dxDateBox("option", "value");
                var weekendfromtime = $("#wft").dxDateBox("option", "value");
                var weekendtotime = $("#wtt").dxDateBox("option", "value");

                var night_from_time = nightfromtime.toTimeString();
                var night_to_time = nighttotime.toTimeString();
                var weekend_from_time = weekendfromtime.toTimeString();
                var weekend_to_time = weekendtotime.toTimeString();

                $.ajax({
                    type: "POST",
                    url: "/OssLabAdmin/TimeConfigurer/",
                    data: JSON.stringify({ night_fromtime: night_from_time, night_totime: night_to_time, weekend_fromtime: weekend_from_time, weekend_totime: weekend_to_time }),
                    async: true,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",


                });

                $.notify('Configured Successfully.', {
                    globalPosition: "top center",
                    className: "success"
                });

            }

            document.querySelector('#mailBtn').addEventListener('click', function () {

                     var url='@Url.Action("MailConfig", "OssLabAdmin", null)';
                     window.location.href=url;
            }, false);

        </script>



    }
</head>
<body>


    @*<div>
            <img id="loader" class="center" src="~/Content/images/loading1.gif" />
        </div>*@
    <h2 style="text-align:center;"><b> Oss Lab Admin </b></h2>



    <div class="loader-wrapper">
        <span class="loader"><span class="loader-inner"></span></span>
    </div>


    @*@using (Html.BeginForm())
        {
            <hr />
            <br />
            <br />
            @Html.AntiForgeryToken()
            <div id="divLabAdmin" style="height:350px">
                <div id="gridContainer">

                </div>

            </div>
        }*@
<div>
    <div id="LabAdminImport">

        @using (Ajax.BeginForm("Index", "OssLabAdmin", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "LabAdminImport", OnSuccess = "mySuccessFuntion(rdata)", OnFailure = "myFailureFuntion()" }, new { enctype = "multipart/form-data", id = "frmUploader" }))
        {


            <table width="60%">
                <tr>
                    <td>
                        <b>Import Oss Lab Admin : </b>
                    </td>
                    <td style="padding:10px;">
                        <div class="custom-file" style="width:100%">
                            <input type="file" class="custom-file-input" id="postedFile" name="postedFile" accept=".xlsx" />
                            <label class="custom-file-label" for="customFile">Choose file</label>
                        </div>
                    </td>
                    <td style="padding:10px;">
                        <input type="submit" title="Upload" value="Upload" class="btn btn-outline-dark" />
                        <i id="UploadSpinner"></i>
                    </td>
                    <td>
                        <button id="myBtn" type="button" class="btn btn-primary">
                            <img style=" height:20px; width:20px;" src="~/Content/images/settings-editor.png" />
                            Configure
                        </button>
                    </td>
                    <td>
                        <button id="mailBtn" type="button" class="btn btn-primary">
                            <img style=" height:20px; width:20px;" src="~/Content/images/settings-editor.png" />
                            Configure Mail
                        </button>
                    </td>
                </tr>
            </table>


            @*@Html.ActionLink("Click here to download template", "DownloadTemplate", new { })*@
        }

    </div>

    @*<a id="btnrequests" class="btn btn-outline-info btn-sm" style="margin:5px; "><i class="fa fa-inbox"></i> Requests</a>
        <a id="buttonClearFilters" class="btn btn-outline-secondary btn-sm" style="margin:5px; "><i class="fa fa-check"></i> Clear Filters</a>
        @using (Html.BeginForm("ExportDataToExcel", "OssLabAdmin", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div style="float:right;height:50px">
                <input type="submit" title="Export" value="Export" class="btn btn-outline-secondary btn-sm" style="margin:5px;float:right" />
            </div>
        }*@
    @*<div align="center" style="font-size:30px;">
            <i id="load"></i>
            <span class="spinner-text" id="loadpanel" style="font-size:20px;">Please, wait...Fetching Item MasterList</span>

        </div>*@


    @*<table id="RequestTable" class="table table-bordered display compact nowrap cell-border" style="width: 100%;">
        </table>*@

    <div id="divLabAdmin" style="height:350px">
        <div id="gridContainer">

        </div>

    </div>

    <!-- The Modal -->
    <div id="myModal" class="modal" >

        <!-- Modal content -->
        <div class="modal-content">
            <div class="modal-header">
                <p style="font-size:large; float:left"><b>Night/Weekend Time Settings</b></p>
                <span class="close">&times;</span>

            </div>
            <div class="modal-body">
                <div class="dx-field">
                    <div class="dx-field-label" style="font-size:medium;"><b>Test Bench Night Utilization</b></div>
                </div>

                <div class="dx-field">
                    <div class="dx-field-label"><b>Start Time:</b></div>
                    <div class="dx-field-value">
                        <div id="nft"></div>
                    </div>
                </div>

                <div class="dx-field">
                    <div class="dx-field-label"><b>End Time:</b></div>
                    <div class="dx-field-value">
                        <div id="ntt"></div>
                    </div>
                </div>

                <div class="dx-field">
                    <div class="dx-field-label" style="font-size:medium;"><b>Test Bench Weekend Utilization</b></div>
                </div>

                <div class="dx-field">
                    <div class="dx-field-label" title=""><b>Start Time:</b></div>
                    <div class="dx-field-value">
                        <div id="wft"></div>
                    </div>
                </div>

                <div class="dx-field">
                    <div class="dx-field-label"><b>End Time:</b></div>
                    <div class="dx-field-value">
                        <div id="wtt"></div>
                    </div>
                </div>

            </div>
            

            <div class="modal-footer">

                <div>
                    <button type="button" class="btn btn-outline-dark" onclick="SaveChanges()">Save Changes</button>
                </div>
            </div>
        </div>

    </div>

   

</div>

   
</body>
</html>