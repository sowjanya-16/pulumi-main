
@{
    ViewBag.Title = "ReportHomePage";
    Layout = "~/Views/Shared/_LayoutPageBudgeting.cshtml";
}
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    
    <style>
        .dx-header-row > td[role="columnheader"] > div.dx-datagrid-text-content {
            font-size: 17px;
            font-weight: bold;
        }

        .dx-datagrid-headers .dx-header-row {
            background-color: antiquewhite;
        }

        .dx-header-row {
            color: black;
        }

        .dx-datagrid-headers.dx-state-disabled:after {
            position: absolute;
            content: '';
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
        }

        .dx-datagrid-headers {
            white-space: normal;
        }

        .dx-datagrid-nowrap.dx-datagrid-headers .dx-header-row > td > .dx-datagrid-text-content {
            white-space: normal;
        }

        a {
            margin-left: 5px;
        }
    </style>
    @section scripts{


        @*CSS Library*@
        @*<link href="~/Content/bootstrap-select.css" rel="stylesheet" />
            <link href="~/Content/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" />*@

        @*JS Library specific for Bootstrap-Select Dropdown*@
        @*<script src="~/Scripts/bootstrap-select.js"></script>*@
        <script>
            var BudgetCode_List;
            var ReportList;
            var CurrencyList;
            debugger;

            GetBudgetCodes();

            GetCurrency();

            debugger;
            getMainReportData(ddlBudgetCode.value, ddlCurrency.value);

            function GetBudgetCodes() {
                debugger;
                $.ajax({

                    type: "GET",
                    url: "/BudgetingVKM/BudgetCodeList",
                    async: false,
                    //data: { 'year': filtered_yr },
                    success: function (data) {
                        debugger;
                        //lookup_data = data;
                        //RFOApprover_list = lookup_data.RFOApprover_List;
                        BudgetCode_List = data;
                        var ddlBudgetCode = document.getElementById("ddlBudgetCode");
                        for (var i = 0; i < data.length; i++) {
                            var option = document.createElement("OPTION");
                            option.innerHTML = data[i].Description;
                            option.value = data[i].Code;
                            ddlBudgetCode.appendChild(option);
                        }
                    },
                    error: function (jqXHR, exception) {
                        debugger;
                        $.notify("Error in loading the data! ", {
                            globalPosition: "top center",
                            className: "warn"
                        })
                    }
                })
            }

            function GetCurrency() {
                debugger;
                $.ajax({

                    type: "GET",
                    url: "/BudgetingVKM/GetCurrencyList",
                    async: false,
                    //data: { 'year': filtered_yr },
                    success: function (data) {
                        debugger;
                        //lookup_data = data;
                        //RFOApprover_list = lookup_data.RFOApprover_List;
                        CurrencyList = data;
                        var ddlCurrency = document.getElementById("ddlCurrency");
                        for (var i = 0; i < data.length; i++) {
                            var option = document.createElement("OPTION");
                            option.innerHTML = data[i].Currency;
                            option.value = data[i].ID;
                            ddlCurrency.appendChild(option);
                        }
                    },
                    error: function (jqXHR, exception) {
                        debugger;
                        $.notify("Error in loading the data! ", {
                            globalPosition: "top center",
                            className: "warn"
                        })
                    }
                })
            }


            function fnBudgetCodeChange(budgetcode) {
                //debugger;
                //$("#RequestTable_RFO").prop('hidden', true);
                //document.getElementById("loadpanel").style.display = "block";

                //genSpinner_load = document.querySelector("#load");
                //genSpinner_load.classList.add('fa');
                //genSpinner_load.classList.add('fa-spinner');
                //genSpinner_load.classList.add('fa-pulse');
                //filtered_yr = yearselect.value;

                //filtered_yr = parseInt(yearselect.value) - 1;
                //filtered_yr = filtered_yr.toString();
                ////debugger;
                ////Ajax call to Get Request Item Data
                //ajaxCallforRequestUI(filtered_yr/*,oems_chosen*/);

                var budget = budgetcode.value;
                var cur = ddlCurrency.value;
                debugger;

                getMainReportData(budget, cur);


            }

            function fnCurrencyChange(currency) {
                //debugger;
                //$("#RequestTable_RFO").prop('hidden', true);
                //document.getElementById("loadpanel").style.display = "block";

                //genSpinner_load = document.querySelector("#load");
                //genSpinner_load.classList.add('fa');
                //genSpinner_load.classList.add('fa-spinner');
                //genSpinner_load.classList.add('fa-pulse');
                //filtered_yr = yearselect.value;

                //filtered_yr = parseInt(yearselect.value) - 1;
                //filtered_yr = filtered_yr.toString();
                ////debugger;
                ////Ajax call to Get Request Item Data
                //ajaxCallforRequestUI(filtered_yr/*,oems_chosen*/);

                var cur = currency.value;
                var budget = ddlBudgetCode.value;
                debugger;

                getMainReportData(budget, cur);


            }

            function getMainReportData(budget, currency) {
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "../BudgetingVKM/GetMainReportData",
                    data: JSON.stringify({ budgetcode: budget, currency: currency }),
                    dataType: 'json',
                    //traditional: true,
                    success: function (data) {
                        debugger;

                        if (data.data.length > 0) {

                            debugger;

                            //LoadDatagrid(data.data);
                            //$.notify('Data Loaded Successfully', {
                            //    globalPosition: "top center",
                            //    className: "success"
                            //});

                            LoadBESummaryDataGrid(data.bgswdata);


                            var jsonObject = JSON.parse(data.data);

                            // Iterate through the object keys to identify table names
                            var i = 1;
                            var divid = "#gridList";
                            $(divid).empty();
                            for (var key in jsonObject) {
                                debugger;
                                if (jsonObject.hasOwnProperty(key)) {
                                    var tableName = key;
                                    var dataArray = jsonObject[key];
                                    debugger;
                                    if (dataArray.length > 0) {
                                        $('<br />').appendTo(divid);
                                        $(' <div id="BUSummaryTable' + i + '">').appendTo(divid);

                                        //var gridView = $("#RequestTable_VKMSPOC").dxDataGrid("instance");
                                        //gridView.beginUpdate();
                                        //gridView.ClearColumns();
                                        //var columns = dataArray[0];
                                        //// Add new columns based on the dynamic structure
                                        //for (var i = 0; i < columns.length; i++) {
                                        //    debugger;
                                        //    gridView.addColumn(columns[i]);
                                        //}

                                        //gridView.EndUpdate();
                                        LoadDataGrids("#BUSummaryTable" + i, dataArray);

                                        i = i + 1;
                                    }
                                    else {
                                        $.notify('No Data', {
                                            globalPosition: "top center",
                                            className: "warn"
                                        });
                                        return;
                                    }


                                }
                                debugger;
                            }
                        }

                        else {
                            //LoadDatagrid(data.data);
                            alert('1');
                            $.notify('No Data', {
                                globalPosition: "top center",
                                className: "warn"
                            });
                        }


                    },
                    error: function (jqXHR, exception) {
                        debugger;
                        $.notify("Error in loading the data! ", {
                            globalPosition: "top center",
                            className: "warn"
                        })
                    }
                });
            }

            function LoadDataGrids(gridName, data) {
                debugger;
                $(gridName).dxDataGrid({
                    dataSource: data,
                    loadPanel: {
                        enabled: true
                    },
                    valueChangeEvent: 'keyup',
                    hoverStateEnabled: {
                        enabled: true
                    },
                    //columnMinWidth: 50,
                    showColumnLines: true,
                    showRowLines: true,
                    rowAlternationEnabled: true,
                    remoteOperations: { groupPaging: true },
                    searchPanel: {
                        visible: true,
                        highlightCaseSensitive: true,
                    },
                    paging: {
                        pageSize: 10,
                    },
                    groupPanel: {
                        visible: true,
                        placeholder: "Group By Panel",
                    },
                    grouping: {
                        autoExpandAll: true,
                    },
                    //repaintChangesOnly: true,
                    columnFixing: {
                        enabled: true
                    },
                    columnChooser: {
                        enabled: false,
                    },
                    export: {
                        enabled: true,

                    },
                    onToolbarPreparing: function (e) {
                        dataGrid = e.component;

                        e.toolbarOptions.items[0].showText = 'always';


                    },


                    columnAutoWidth: true, //needed to allow horizontal scroll - column area expanding when there are more columns instead of fixed area with conjusted columns
                    columnAutoHeight: true,
                    showScrollbar: 'always',
                    remoteOperations: false,
                    showColonAfterLabel: true,
                    showValidationSummary: true,
                    onContentReady: function (e) {

                        e.element.find('.dx-datagrid-headers').toggleClass('dx-state-disabled', e.component.hasEditData());
                    },
                    paging: {
                        pageSize: 15,
                    },
                    pager: {
                        visible: true,
                        allowedPageSizes: [15, 30, 'all'],
                        showPageSizeSelector: true,
                        showInfo: true,
                        showNavigationButtons: true,
                    },
                    allowColumnReordering: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    alignment: "center",
                    //columns: [
                    //    {
                    //        type: "buttons",
                    //        width: 65,
                    //        alignment: "left",
                    //        fixed: true,
                    //        fixedPosition: "left",
                    //        buttons: [
                    //            "edit",
                    //        ]
                    //    },
                    //{
                    columns: [
                        {
                            //caption: 'BU',
                            alignment: "center",
                            columns: [

                                {
                                    caption: "Top Section",
                                    dataField: 'TopSection',

                                },

                                {
                                    caption: "Planned",
                                    dataField: 'Planned',
                                    dataType: "number",
                                    format: { type: "currency", precision: 2 },
                                },

                                {
                                    caption: "Invoiced",
                                    dataField: 'Invoiced',
                                    dataType: "number",
                                    format: { type: "currency", precision: 2 },
                                },

                                {
                                    caption: "Purchase Orders",
                                    dataField: 'PurchaseOrder',
                                    dataType: "number",
                                    format: { type: "currency", precision: 2 },
                                },
                                {
                                    caption: "Purchase Requisitions",
                                    dataField: 'PRValue',
                                    dataType: "number",
                                    format: { type: "currency", precision: 2 },
                                },
                                {
                                    caption: "Sourcing Request 2023",
                                    dataField: 'SRValue',
                                    dataType: "number",
                                    format: { type: "currency", precision: 2 },
                                },
                                {
                                    caption: "Total Budget Utilized",
                                    dataField: 'TotalUtilizedBudget',
                                    dataType: "number",
                                    format: { type: "currency", precision: 2 },
                                },
                                //{
                                //    caption: "Section",
                                //    dataField: 'Section',
                                //    width: 400,
                                //    lookup: {
                                //        dataSource: function (options) {
                                //            debugger;
                                //            return {
                                //                store: Section_List,
                                //            };
                                //        },
                                //        valueExpr: "Section",
                                //        displayExpr: "Section"
                                //    },
                                //    //allowEditing: false,
                                //},
                                //{
                                //    caption: 'Approved ($)',
                                //    dataField: 'Approved',
                                //    width: 300,
                                //    dataType: "number",
                                //    format: { type: "currency", precision: 2 },
                                //    allowEditing: false,
                                //},
                                //{
                                //    caption: 'Utilized ($)',
                                //    dataField: 'Utilized',
                                //    width: 300,
                                //    dataType: "number",
                                //    format: { type: "currency", precision: 2 },
                                //    allowEditing: false,
                                //},
                                //{
                                //    caption: 'Balance ($)',
                                //    dataField: 'Balance',
                                //    width: 300,
                                //    dataType: "number",
                                //    format: { type: "currency", precision: 2 },
                                //    allowEditing: false,
                                //},
                                //{
                                //    caption: 'Amount ($)',
                                //    dataField: 'Amount',
                                //    width: 300,
                                //    dataType: "number",
                                //    format: { type: "currency", precision: 2 },
                                //},
                            ],
                        },
                    ],

                    
                    //},
                    //],

                    width: "96vw", //needed to allow horizontal scroll
                    height: "70vh",

                    //onEditorPreparing: function (e) {
                    //    //debugger;
                    //    var component = e.component,
                    //        rowIndex = e.row && e.row.rowIndex;//new elements are positioned on the rowindex

                    //    if (e.dataField === "Section") {

                    //        debugger;
                    //        var onValueChanged = e.editorOptions.onValueChanged;//event for itemname; makes sure that the itemname is modified data
                    //        e.editorName = "dxAutocomplete";
                    //        //e.editorName.cellInfo.value = e.value;
                    //        //e.editorOptions.placeholder = 'Select Emp Name';
                    //        e.editorOptions.onValueChanged = function (e) {
                    //            //debugger;
                    //            onValueChanged.call(this, e);
                    //            debugger;



                    //        }



                    //    }




                    //},

                    //onRowInserting: function (e) {
                    //    debugger;
                    //    Selected = [];
                    //    Selected.push(e.data);
                    //    SaveCTGDetails(Selected);
                    //},
                    //onRowUpdating(e) {
                    //    debugger;
                    //    Selected = [];
                    //    Selected.push({
                    //        ID: e.key.ID,
                    //        Section: e.key.Section,
                    //        Amount: e.newData.Amount,
                    //    });
                    //    SaveCTGDetails(Selected);
                    //},
                });
            }

            function LoadBESummaryDataGrid(data) {
                debugger;

                var jsonObject = JSON.parse(data);
                var i = 1;
                for (var key in jsonObject) {
                    debugger;
                    if (jsonObject.hasOwnProperty(key)) {
                        //var tableName = key;
                        var dataArray = jsonObject[key];
                        if (dataArray[0].Cost != 0) {
                            if (i == 1) {
                                $("#BGSWSummary").dxDataGrid({
                                    dataSource: dataArray,
                                    loadPanel: {
                                        enabled: true
                                    },
                                    valueChangeEvent: 'keyup',
                                    hoverStateEnabled: {
                                        enabled: true
                                    },
                                    //columnMinWidth: 50,
                                    showColumnLines: true,
                                    showRowLines: true,
                                    rowAlternationEnabled: true,
                                    remoteOperations: { groupPaging: true },
                                    searchPanel: {
                                        visible: true,
                                        highlightCaseSensitive: true,
                                    },
                                    paging: {
                                        pageSize: 10,
                                    },
                                    groupPanel: {
                                        visible: true,
                                        placeholder: "Group By Panel",
                                    },
                                    grouping: {
                                        autoExpandAll: true,
                                    },
                                    //repaintChangesOnly: true,
                                    columnFixing: {
                                        enabled: true
                                    },
                                    columnChooser: {
                                        enabled: false,
                                    },
                                    export: {
                                        enabled: true,

                                    },
                                    onToolbarPreparing: function (e) {
                                        dataGrid = e.component;

                                        e.toolbarOptions.items[0].showText = 'always';


                                    },

                                    columnAutoWidth: true, //needed to allow horizontal scroll - column area expanding when there are more columns instead of fixed area with conjusted columns
                                    columnAutoHeight: true,
                                    showScrollbar: 'always',
                                    remoteOperations: false,
                                    showColonAfterLabel: true,
                                    showValidationSummary: true,
                                    allowColumnReordering: true,
                                    rowAlternationEnabled: true,
                                    showBorders: true,
                                    alignment: "center",

                                    columns: [
                                        {
                                            caption: "BGSW Summary",
                                            alignment: "center",
                                            columns: [

                                                {
                                                    caption: "Parameters",
                                                    dataField: 'Parameters',

                                                },

                                                {
                                                    caption: "Cost in M Euro",
                                                    dataField: 'Cost',

                                                },




                                            ],
                                        },
                                    ],
                                    //},
                                    //],

                                    width: "40vw", //needed to allow horizontal scroll
                                    height: "45vh",


                                });
                            }
                            else {
                                $("#BESummary").dxDataGrid({
                                    dataSource: dataArray,
                                    loadPanel: {
                                        enabled: true
                                    },
                                    valueChangeEvent: 'keyup',
                                    hoverStateEnabled: {
                                        enabled: true
                                    },
                                    //columnMinWidth: 50,
                                    showColumnLines: true,
                                    showRowLines: true,
                                    rowAlternationEnabled: true,
                                    remoteOperations: { groupPaging: true },
                                    searchPanel: {
                                        visible: true,
                                        highlightCaseSensitive: true,
                                    },
                                    paging: {
                                        pageSize: 10,
                                    },
                                    groupPanel: {
                                        visible: true,
                                        placeholder: "Group By Panel",
                                    },
                                    grouping: {
                                        autoExpandAll: true,
                                    },
                                    //repaintChangesOnly: true,
                                    columnFixing: {
                                        enabled: true
                                    },
                                    columnChooser: {
                                        enabled: false,
                                    },
                                    export: {
                                        enabled: true,

                                    },
                                    onToolbarPreparing: function (e) {
                                        dataGrid = e.component;

                                        e.toolbarOptions.items[0].showText = 'always';


                                    },
                                    //editing: {

                                    //    mode: "row",
                                    //    allowAdding: true,
                                    //    allowUpdating: true,
                                    //    //allowDeleting: !data.IsDelivered,
                                    //    useIcons: true,
                                    //},

                                    columnAutoWidth: true, //needed to allow horizontal scroll - column area expanding when there are more columns instead of fixed area with conjusted columns
                                    columnAutoHeight: true,
                                    showScrollbar: 'always',
                                    remoteOperations: false,
                                    showColonAfterLabel: true,
                                    showValidationSummary: true,
                                    //validationMessageMode: 'always',
                                    //validationMessagePosition: 'right',
                                    //headerFilter: {
                                    //    visible: true,
                                    //    applyFilter: "auto",
                                    //    allowSearching: true
                                    //},
                                    allowColumnReordering: true,
                                    rowAlternationEnabled: true,
                                    showBorders: true,
                                    alignment: "center",
                                    //columns: [
                                    //    {
                                    //        type: "buttons",
                                    //        width: 65,
                                    //        alignment: "left",
                                    //        fixed: true,
                                    //        fixedPosition: "left",
                                    //        buttons: [
                                    //            "edit",
                                    //        ]
                                    //    },
                                    //{
                                    columns: [
                                        {
                                            caption: "BU Summary",
                                            alignment: "center",
                                            columns: [

                                                {
                                                    caption: "BU",
                                                    dataField: 'BU',

                                                },

                                                {
                                                    caption: "Planned",
                                                    dataField: 'Planned',
                                                    dataType: "number",
                                                    format: { type: "currency", precision: 2 },
                                                },

                                                {
                                                    caption: "Invoiced",
                                                    dataField: 'Invoiced',
                                                    dataType: "number",
                                                    format: { type: "currency", precision: 2 },
                                                },

                                                {
                                                    caption: "Purchase Orders",
                                                    dataField: 'PurchaseOrder',
                                                    dataType: "number",
                                                    format: { type: "currency", precision: 2 },
                                                },
                                                {
                                                    caption: "Purchase Requisitions",
                                                    dataField: 'PRValue',
                                                    dataType: "number",
                                                    format: { type: "currency", precision: 2 },
                                                },
                                                {
                                                    caption: "Sourcing Request 2023",
                                                    dataField: 'SRValue',
                                                    dataType: "number",
                                                    format: { type: "currency", precision: 2 },
                                                },
                                                {
                                                    caption: "Total Budget Utilized",
                                                    dataField: 'TotalUtilizedBudget',
                                                    dataType: "number",
                                                    format: { type: "currency", precision: 2 },
                                                },
                                                //{
                                                //    caption: "Section",
                                                //    dataField: 'Section',
                                                //    width: 400,
                                                //    lookup: {
                                                //        dataSource: function (options) {
                                                //            debugger;
                                                //            return {
                                                //                store: Section_List,
                                                //            };
                                                //        },
                                                //        valueExpr: "Section",
                                                //        displayExpr: "Section"
                                                //    },
                                                //    //allowEditing: false,
                                                //},
                                                //{
                                                //    caption: 'Approved ($)',
                                                //    dataField: 'Approved',
                                                //    width: 300,
                                                //    dataType: "number",
                                                //    format: { type: "currency", precision: 2 },
                                                //    allowEditing: false,
                                                //},
                                                //{
                                                //    caption: 'Utilized ($)',
                                                //    dataField: 'Utilized',
                                                //    width: 300,
                                                //    dataType: "number",
                                                //    format: { type: "currency", precision: 2 },
                                                //    allowEditing: false,
                                                //},
                                                //{
                                                //    caption: 'Balance ($)',
                                                //    dataField: 'Balance',
                                                //    width: 300,
                                                //    dataType: "number",
                                                //    format: { type: "currency", precision: 2 },
                                                //    allowEditing: false,
                                                //},
                                                //{
                                                //    caption: 'Amount ($)',
                                                //    dataField: 'Amount',
                                                //    width: 300,
                                                //    dataType: "number",
                                                //    format: { type: "currency", precision: 2 },
                                                //},
                                            ],
                                        },
                                    ],
                                    //},
                                    //],

                                    summary: {
                                        totalItems: [{
                                            column: 'Planned',
                                            summaryType: 'sum',
                                            valueFormat: { type: "currency", precision: 2 },
                                        },
                                        {
                                            column: 'Invoiced',
                                            summaryType: 'sum',
                                            valueFormat: 'currency',
                                        },
                                        {
                                            column: 'PurchaseOrder',
                                            summaryType: 'sum',
                                            valueFormat: 'currency',
                                        },
                                        {
                                            column: 'PRValue',
                                            summaryType: 'sum',
                                            valueFormat: 'currency',
                                        },
                                        {
                                            column: 'SRValue',
                                            summaryType: 'sum',
                                            valueFormat: 'currency',
                                        },
                                        {
                                            column: 'TotalUtilizedBudget',
                                            summaryType: 'sum',
                                            valueFormat: 'currency',
                                        },
                                        ],
                                    },

                                    width: "96vw", //needed to allow horizontal scroll
                                    height: "70vh",

                                    //onEditorPreparing: function (e) {
                                    //    //debugger;
                                    //    var component = e.component,
                                    //        rowIndex = e.row && e.row.rowIndex;//new elements are positioned on the rowindex

                                    //    if (e.dataField === "Section") {

                                    //        debugger;
                                    //        var onValueChanged = e.editorOptions.onValueChanged;//event for itemname; makes sure that the itemname is modified data
                                    //        e.editorName = "dxAutocomplete";
                                    //        //e.editorName.cellInfo.value = e.value;
                                    //        //e.editorOptions.placeholder = 'Select Emp Name';
                                    //        e.editorOptions.onValueChanged = function (e) {
                                    //            //debugger;
                                    //            onValueChanged.call(this, e);
                                    //            debugger;



                                    //        }



                                    //    }




                                    //},

                                    //onRowInserting: function (e) {
                                    //    debugger;
                                    //    Selected = [];
                                    //    Selected.push(e.data);
                                    //    SaveCTGDetails(Selected);
                                    //},
                                    //onRowUpdating(e) {
                                    //    debugger;
                                    //    Selected = [];
                                    //    Selected.push({
                                    //        ID: e.key.ID,
                                    //        Section: e.key.Section,
                                    //        Amount: e.newData.Amount,
                                    //    });
                                    //    SaveCTGDetails(Selected);
                                    //},
                                });
                            }
                            i = i + 1;
                        }
                        else {
                            return;
                        }

                    }
                }




            }

        </script>
    }
    @*});*@

</head>

<body>
    <div>
        <div>
            <table align="center">
                <tr>
                    @*<td>
                        <img class="card-img mx-auto d-block" src="~/Content/images/shoppingcart-blue.png" style="width:35px;height:35px;" alt="VKM Order" />
                    </td>*@
                    <td><h4 style="text-align:center;margin-top:2px;"><b> Budget Summary </b></h4></td>
                </tr>
            </table>
        </div>

        <div style="float:left;" id="maindiv">
            <label style="text-align:left;  padding-right: 10px;" class=""><b>Choose the CostElement:</b> </label>
            <select id="ddlBudgetCode" class="selectpicker show-tick" onchange="fnBudgetCodeChange(this)"
                    data-live-search="true"
                    data-actions-box="true"
                    data-width="130px"
                    style="cursor:pointer;">
            </select>
            <label style="text-align:left;  padding-right: 10px;padding-left: 100px;" class=""><b>Choose the Currency:</b> </label>
            <select id="ddlCurrency" class="selectpicker show-tick" onchange="fnCurrencyChange(this)"
                    data-live-search="true"
                    data-actions-box="true"
                    data-width="130px"
                    style="cursor:pointer;">
            </select>
        </div>
        <br />
        <br />
        <table align="center">
            <tr>
                <td>
                    <div id="BGSWSummary"></div>
                </td>
            </tr>
        </table>
        <table align="center">
            <tr>
                <td>
                    <div id="BESummary"></div>
                </td>
            </tr>
        </table>
        <div id="gridList">

        </div>


    </div>
</body>
</html>
