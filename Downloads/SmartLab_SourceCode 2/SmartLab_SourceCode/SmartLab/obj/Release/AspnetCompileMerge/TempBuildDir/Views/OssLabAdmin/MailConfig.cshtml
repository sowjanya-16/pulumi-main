@model LC_Reports_V1.Models.EmailDetails

@{
    ViewBag.Title = "MailConfig";
    Layout = "~/Views/Shared/_Layout_OSS.cshtml";
}

<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>SmartLab - Reporting Options</title>


<script src="~/Content/employees.js"></script>


<link href="~/Content/LabReportPage.css" rel="stylesheet" />
<link href="~/Content/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" />

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <!-- Google tag (gtag.js) -->
    <script async=async src="https://www.googletagmanager.com/gtag/js?id=G-GKX0NP1SYR"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'G-GKX0NP1SYR');
    </script>

    @section Scripts{

        <script type="text/javascript">

            //$(window).on("load", function () {
            //    localStorage.clear();
            //    $(".loader-wrapper").fadeOut("slow");

            //});


            $(".custom-file-input").on("change", function () {
                var fileName = $(this).val().split("\\").pop();
                $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
            });


            //window.onload = function () {
            $(document).ready(function () {
                debugger;
                localStorage.clear();
                $(".loader-wrapper").fadeOut("slow");


                var obj = @Html.Raw(Json.Encode(Model));
                LoadDataGrid(obj.ConfigList);

                var genSpinner = document.querySelector("#UploadSpinner");
                genSpinner.classList.remove('fa');
                genSpinner.classList.remove('fa-spinner');
                genSpinner.classList.remove('fa-pulse');
                //checkFileAPI();
            });

            function showgrid() {
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "/OssLabAdmin/GetEMailDetails",
                    datatype: "json",
                    //async: true,
                    success: function (data) {
                        debugger;
                        if (data.success == false) {
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "error"
                            });
                        }
                        else {

                            //if (data.data.Data.Content.length > 0) {
                            //    debugger;
                            //    //var res = JSON.parse(data.data.Data.Content);
                            //    var res = eval(data.data.Data.Content);
                            //    LoadDataGrid(res);

                            //}
                            if (data.data.length > 0) {
                                debugger;
                                //var res = JSON.parse(data.data.Data.Content);
                                //var res = eval(data.data.Data.Content);
                                LoadDataGrid(data.data);

                            }
                            else {
                                $('#myModal').modal();
                            }

                        }
                    },

                    error: function (jqXHR, exception) {
                        debugger;
                        var msg = '';
                        if (jqXHR.status === 0) {
                            msg = 'Not connect.\n Verify Network.';
                        } else if (jqXHR.status == 404) {
                            msg = 'Requested page not found. [404]';
                        } else if (jqXHR.status == 500) {
                            msg = 'Internal Server Error [500].';
                        } else if (exception === 'parsererror') {
                            msg = 'Requested JSON parse failed.';
                        } else if (exception === 'timeout') {
                            msg = 'Time out error.';
                        } else if (exception === 'abort') {
                            msg = 'Ajax request aborted.';
                        } else {
                            msg = 'Uncaught Error.\n' + jqXHR.responseText;
                        }
                        $('#post').html(msg);
                    }



                });
            }



            function LoadDataGrid(data) {
                debugger;
                $("#gridContainer").dxDataGrid({
                    dataSource: data,
                    paging: {
                        enabled: false
                    },
                    showBorders: true,
                    allowSorting: false,
                    filterRow: {
                        visible: true,
                        applyFilter: "auto"
                    },
                    headerFilter: {
                        visible: true,
                        applyFilter: "auto"
                    },
                    export: {
                        enabled: true
                    },
                    columns: [{

                        dataField: "ComputerID",
                        visible: false

                    },
                        {
                            caption: "",
                            columns: [{

                                caption: "PC Name",
                                width: 200,
                                dataField: "DisplayName",
                                area: "row",
                                allowEditing: false,
                                expanded: true
                            }, {
                                caption: "Responsible",
                                width: 120,
                                dataField: "Responsible",
                                area: "row",
                                allowEditing: false,
                                expanded: true
                            }]
                        } ,{
                        caption: "Level 1",
                        columns: [{
                            caption: "Responsible EMail",
                            width: 200,
                            //dataField: "L1_Responsible"
                            dataField: "ResNTID"
                                    //area: "row"
                                    //expanded: true
                        }]
                        }, {
                            caption: "Level 2",
                            columns: [
                                {
                                    caption: "LMT",
                                    width: 150,
                                    dataField: "LMT",
                                    //dataField: "L2_LMT",
                                    //dataType: "date"
                                    area: "row",
                                    expanded: true
                                    //dataType: "date"
                                }, {
                                    caption: "EM",
                                    width: 150,
                                    dataField: "EM"
                                    //dataField: "L2_EM"
                                    //area: "row"
                                    //expanded: true
                                }, {
                                    caption: "SW-PCM",
                                    width: 150,
                                    dataField: "SWPCM"
                                    //dataField: "L2_SWPCM"
                                    //area: "row"
                                    //expanded: true
                                }, {
                                    caption: "SW-TC",
                                    width: 120,
                                    dataField: "SWTC"
                                    //dataField: "L2_SWTC"
                                    //area: "row"
                                    //expanded: true
                                }, {
                                    caption: "Sys-TC",
                                    width: 150,
                                    dataField: "SysTC"
                                    //dataField: "L2_SysTC"
                                    //area: "row"
                                    //expanded: true
                                }]
                        }, {
                            caption: "Level 3",
                            columns: [
                                {
                                    caption: "DH1",
                                    width: 120,
                                    dataField: "DH1"
                                    //dataField: "L3_DH1"
                                    //area: "row"
                                    //expanded: true
                                }, {
                                    caption: "DH2",
                                    width: 120,
                                    dataField: "DH2"
                                    //dataField: "L3_DH2"
                                    //area: "row"
                                    //expanded: true
                                }]
                        }
                    //    }, {
                    //    caption: "Modified User",
                    //    width: 120,
                    //    dataField: "ModifiedUser"
                    //    //area: "row"
                    //    //expanded: true
                    //}

                    ],

                    editing: {
                        mode: "row",
                        allowUpdating: true,
                        allowDeleting: false
                        //allowAdding: true
                    },
                    onRowInserted: function (e) {
                        debugger;
                        Selected = [];
                        Selected.push(e.data);
                        UpdateData(Selected);
                    },
                    onRowUpdated: function (e) {
                        debugger;
                        //alert(e.newData);
                        Selected = [];
                        Selected.push(e.data);
                        UpdateData(Selected);
                    }

                }).dxDataGrid("instance");;

            }

            function UpdateData(id1) {
                debugger;
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "/OssLabAdmin/UpdateMailDetails",
                    data: JSON.stringify({ item: id1[0] }),
                    datatype: "json",
                    success: function (data) {
                        alert("Updated");

                    },
                    error: function (jqXHR, exception) {
                        debugger;
                        var msg = '';
                        if (jqXHR.status === 0) {
                            msg = 'Not connect.\n Verify Network.';
                        } else if (jqXHR.status == 404) {
                            msg = 'Requested page not found. [404]';
                        } else if (jqXHR.status == 500) {
                            msg = 'Internal Server Error [500].';
                        } else if (exception === 'parsererror') {
                            msg = 'Requested JSON parse failed.';
                        } else if (exception === 'timeout') {
                            msg = 'Time out error.';
                        } else if (exception === 'abort') {
                            msg = 'Ajax request aborted.';
                        } else {
                            msg = 'Uncaught Error.\n' + jqXHR.responseText;
                        }
                        $('#post').html(msg);
                    },
                });
            }

            var rdata;//this variable needs to be named the same as the parameter in the function call specified for the AjaxOptions.OnSuccess

            function mySuccessFuntion(rdata) {
                debugger;
                if (rdata.success) {
                    $.notify('Data Uploaded Successfully', {
                        globalPosition: "top center",
                        className: "success"
                    });
                }
                else if (rdata.success == false) {
                    $.notify(rdata.errormsg, {
                        globalPosition: "top center",
                        className: "warn"
                    });
                }
                else {

                }
                showgrid();

                //function success_refresh_getdata(response) {
                //    debugger;
                //    var LabList = response.data;


                //}

                //function error_refresh_getdata(response) {
                //    //error
                //}






            }

            function myFailureFuntion() {
                //Failure code
            }

            window.addEventListener("submit", function (e) {
                debugger;
                var form = e.target;
                if (form.getAttribute("enctype") === "multipart/form-data") {
                    if (form.dataset.ajax) {
                        //to sync form events with request events
                        e.preventDefault();//written to block existing function -like double click on submit - incase of redundant call - only 1 submit fn should run at a time
                        e.stopImmediatePropagation();

                        //necessary for uploading files since event of uploading files should be synchronous b/w client and server though we use ajax(asynchronous call)
                        var xhr = new XMLHttpRequest();//if another request sent->refresh browser- w/o refreshing pg
                        //opening the import form
                        xhr.open(form.method, form.action);//method-POST, action-webpg; link triggers the actnresult -> returning the view to index.cshtml->renders form

                        //set the template (sending format) so that server understands how to parse it
                        xhr.setRequestHeader("x-Requested-With", "XMLHttpRequest"); // this allows 'Request.IsAjaxRequest()' to work in the controller code

                        xhr.onreadystatechange = function () {

                            if (xhr.readyState === XMLHttpRequest.DONE && xhr.status == 200) { //function executes once response is rx from the server


                                try {
                                    rdata = JSON.parse(xhr.responseText); //returned data to be parsed if it is a JSON object

                                }
                                catch (e) {
                                    rdata = xhr.responseText;
                                }
                                if (form.dataset.ajaxSuccess) {
                                    eval(form.dataset.ajaxSuccess); //converts function text to real function and executes (not very safe though)

                                }
                                else if (form.dataset.ajaxFailure) {
                                    eval(form.dataset.ajaxFailure);
                                }

                                if (form.dataset.ajaxUpdate) {

                                    var genSpinner = document.querySelector("#UploadSpinner");
                                    genSpinner.classList.remove('fa');
                                    genSpinner.classList.remove('fa-spinner');
                                    genSpinner.classList.remove('fa-pulse');

                                }
                            }
                        };

                        xhr.send(new FormData(form)); //send a request to server after importing
                    }
                }
            }, true);



        </script>

    }

</head>
<body>
    <h2 style="text-align:center;"><b> OSS - Email Configuration </b></h2>

    <div class="loader-wrapper">
        <span class="loader"><span class="loader-inner"></span></span>
    </div>

    <div>
        <div id="LabAdminImport">

            @using (Ajax.BeginForm("MailConfig", "OssLabAdmin", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "LabAdminImport", OnSuccess = "mySuccessFuntion(rdata)", OnFailure = "myFailureFuntion()" }, new { enctype = "multipart/form-data", id = "frmUploader" }))
            {


                <table width="50%">
                    <tr>
                        <td>
                            <b>Import : </b>
                        </td>
                        <td style="padding:10px;">
                            <div class="custom-file" style="width:100%">
                                <input type="file" class="custom-file-input" id="postedFile" name="postedFile" accept=".xlsx" />
                                <label class="custom-file-label" for="customFile">Choose file</label>
                            </div>
                        </td>
                        <td style="padding:10px;">
                            <input type="submit" title="Upload" value="Upload" class="btn btn-outline-dark" />
                            <i id="UploadSpinner"></i>
                        </td>
                        @*<td>
                            <button id="myBtn" type="button" class="btn btn-primary">
                                <img style=" height:20px; width:20px;" src="~/Content/images/settings-editor.png" />
                                Configure
                            </button>
                        </td>*@
                    </tr>
                </table>


                @*@Html.ActionLink("Click here to download template", "DownloadTemplate", new { })*@
            }

        </div>

        @*<a id="btnrequests" class="btn btn-outline-info btn-sm" style="margin:5px; "><i class="fa fa-inbox"></i> Requests</a>
            <a id="buttonClearFilters" class="btn btn-outline-secondary btn-sm" style="margin:5px; "><i class="fa fa-check"></i> Clear Filters</a>
            @using (Html.BeginForm("ExportDataToExcel", "OssLabAdmin", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div style="float:right;height:50px">
                    <input type="submit" title="Export" value="Export" class="btn btn-outline-secondary btn-sm" style="margin:5px;float:right" />
                </div>
            }*@
        @*<div align="center" style="font-size:30px;">
                <i id="load"></i>
                <span class="spinner-text" id="loadpanel" style="font-size:20px;">Please, wait...Fetching Item MasterList</span>

            </div>*@


        @*<table id="RequestTable" class="table table-bordered display compact nowrap cell-border" style="width: 100%;">
            </table>*@

        <div id="divLabAdmin" style="height:350px">
            <div id="gridContainer">

            </div>

        </div>

    </div>

</body>
</html>

